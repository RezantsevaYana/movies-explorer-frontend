{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from 'react-router';\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MoviesCardList(props) {\n  _s();\n\n  const routes = useLocation();\n\n  function handleClick() {\n    props.setMoviesCount(props.moviesCount + 3);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [routes.pathname === \"/movies\" && props.moviesList && props.moviesList.length === 0 ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"movies-list\",\n      children: props.filterMovies.map((item, index) => {\n        if (index + 1 <= props.moviesCount) {\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            movie: item,\n            handleSaveMovies: props.handleSaveMovies\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 24\n          }, this);\n        } else {\n          return '';\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this), routes.pathname === \"/saved-movies\" && props.favoriteList === 0 ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"movies-list\",\n      children: props.favoriteList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(MoviesCard, {\n          movie: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this), 0 < props.moviesCount && props.moviesCount < 30 && routes.pathname === \"/movies\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"another-button__container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"another-button\",\n        onClick: handleClick,\n        children: \"\\u0415\\u0449\\u0451\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MoviesCardList, \"w1a4E/2uxAkV/9UejXP7mbcgxbI=\", false, function () {\n  return [useLocation];\n});\n\n_c = MoviesCardList;\nexport default MoviesCardList; // добавить вариант с выводом на экран \"ничего не найдено\"\n// убрать конпку \"еще\" в случае, если нет поиска\n// добавить вариант поиска по английскому наименованию\n// сделать так, чтобы результат поиска при последующих поисках не осуществлялся\n// рендер карточек фильмов в зависимости от размеров экрана\n// при нажатии на карточку происходит переадресация на трейлер фильма\n\n/*\n{ routes.pathname === \"/movies\" && props.moviesList && props.moviesList.length === 0 ?\n            (<Preloader/>) :\n            (<section className=\"movies-list\">\n            {props.filterMovies.map((item, index) => {\n              if (index + 1 <= props.moviesCount) {\n                return <MoviesCard movie={item} key={index} handleSaveMovies={props.handleSaveMovies} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n\n        }\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"names":["useLocation","React","useEffect","useState","moviesApi","MoviesCard","Preloader","MoviesCardList","props","routes","handleClick","setMoviesCount","moviesCount","pathname","moviesList","length","filterMovies","map","item","index","handleSaveMovies","favoriteList"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,MAAM,GAAIT,WAAW,EAA3B;;AAEA,WAASU,WAAT,GAAuB;AACnBF,IAAAA,KAAK,CAACG,cAAN,CAAqBH,KAAK,CAACI,WAAN,GAAkB,CAAvC;AACH;;AAED,sBACI;AAAA,eAEEH,MAAM,CAACI,QAAP,KAAoB,SAApB,IAAiCL,KAAK,CAACM,UAAvC,IAAqDN,KAAK,CAACM,UAAN,CAAiBC,MAAjB,KAA4B,CAAjF,gBACG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADH,gBAEG;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,gBACAP,KAAK,CAACQ,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,YAAIA,KAAK,GAAG,CAAR,IAAaX,KAAK,CAACI,WAAvB,EAAoC;AAClC,8BAAO,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEM,IAAnB;AAAqC,YAAA,gBAAgB,EAAEV,KAAK,CAACY;AAA7D,aAA8BD,KAA9B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD,MAEO;AACL,iBAAO,EAAP;AACD;AACF,OANA;AADA;AAAA;AAAA;AAAA;AAAA,YAJL,EAeEV,MAAM,CAACI,QAAP,KAAoB,eAApB,IAAuCL,KAAK,CAACa,YAAN,KAAuB,CAA9D,gBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAEC;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,gBACEb,KAAK,CAACa,YAAN,CAAmBJ,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,4BAAO,QAAC,UAAD;AAAY,UAAA,KAAK,EAAED;AAAnB,WAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBH,EAuBE,IAAIX,KAAK,CAACI,WAAV,IAAyBJ,KAAK,CAACI,WAAN,GAAoB,EAA7C,IAAmDH,MAAM,CAACI,QAAP,KAAoB,SAAvE,iBACE;AAAS,MAAA,SAAS,EAAC,2BAAnB;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAEH,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA,kBADJ;AA+BH;;GAtCQH,c;UACWP,W;;;KADXO,c;AAwCT,eAAeA,cAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useLocation } from 'react-router';\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\n\n\nfunction MoviesCardList(props) {\n    const routes  = useLocation();\n \n    function handleClick() {\n        props.setMoviesCount(props.moviesCount+3);\n    }\n\n    return (\n        <>\n\n        { routes.pathname === \"/movies\" && props.moviesList && props.moviesList.length === 0 ?\n            (<Preloader/>) :\n            (<section className=\"movies-list\">\n            {props.filterMovies.map((item, index) => {\n              if (index + 1 <= props.moviesCount) {\n                return <MoviesCard movie={item} key={index} handleSaveMovies={props.handleSaveMovies} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n        }\n        \n        { routes.pathname === \"/saved-movies\" && props.favoriteList === 0 ?\n          (<Preloader/>) :\n          (<section className=\"movies-list\">\n            {props.favoriteList.map((item, index) => {\n                return <MoviesCard movie={item} key={index} />;\n            })}\n            </section>)\n        }\n        { 0 < props.moviesCount && props.moviesCount < 30 && routes.pathname === \"/movies\" &&   (\n            <section className=\"another-button__container\">\n                <button className=\"another-button\" onClick={handleClick}>Ещё</button>\n            </section>\n        )}\n        </>\n    );\n}\n\nexport default MoviesCardList;\n\n\n// добавить вариант с выводом на экран \"ничего не найдено\"\n// убрать конпку \"еще\" в случае, если нет поиска\n// добавить вариант поиска по английскому наименованию\n// сделать так, чтобы результат поиска при последующих поисках не осуществлялся\n// рендер карточек фильмов в зависимости от размеров экрана\n// при нажатии на карточку происходит переадресация на трейлер фильма\n\n\n/*\n{ routes.pathname === \"/movies\" && props.moviesList && props.moviesList.length === 0 ?\n            (<Preloader/>) :\n            (<section className=\"movies-list\">\n            {props.filterMovies.map((item, index) => {\n              if (index + 1 <= props.moviesCount) {\n                return <MoviesCard movie={item} key={index} handleSaveMovies={props.handleSaveMovies} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n\n        }\n*/\n\n\n   \n"]},"metadata":{},"sourceType":"module"}