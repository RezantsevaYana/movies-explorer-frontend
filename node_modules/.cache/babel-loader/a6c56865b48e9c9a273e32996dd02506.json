{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({}); // стэйт переменная открыти попапа\n\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false); // стэйт переменные регистрации и авторизации\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\"); // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false); // переменные состояния, отвечающие за отображение маил в хэдэр\n\n  const [email, setMail] = React.useState(\"\");\n  const navigate = useNavigate(); // открытие попапа\n\n  function onHeaderOpen() {\n    setIsPopupOpen(true);\n  } // закрытие попапа\n\n\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  } // для результата авторизации и регистрации - пока не реализовано\n\n\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  } // загрузка информации о пользователе\n\n\n  React.useEffect(() => {\n    Promise.all(mainApi.getUserInfo()).then(profile => {\n      setCurrentUser(profile);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // проверка токенов авторизованных пользователей, вернувшихся в приложение\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) // проверяем токен\n      mainApi.checkToken(jwt).then(res => {\n        // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n        if (res) {\n          //setMail(res.data.email);\n          setIsLoggedIn(true); // navigate(\"/movies\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n  }, [navigate]); // регистрация\n\n  function onRegister(_ref) {\n    let {\n      email,\n      password,\n      name\n    } = _ref;\n    mainApi.register({\n      email,\n      password,\n      name\n    }).then(data => {\n      if (data.id) {\n        navigate('/signin');\n        onLogin({\n          email,\n          password\n        });\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n    });\n  } // авторизация (не реализовано)\n\n\n  function onLogin(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    mainApi.login({\n      email,\n      password\n    }).then(res => {\n      setIsLoggedIn(true);\n      navigate('/movies');\n      localStorage.setItem(\"jwt\", res.token);\n      console.log(res);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление токена при выходе\n\n\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    navigate(\"/sign-in\");\n    setIsLoggedIn(false);\n  }\n\n  return (\n    /*#__PURE__*/\n    // подключаем дерево компоненнтов к провайдеру контекста\n    _jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movies\",\n            element: /*#__PURE__*/_jsxDEV(Movies, {\n              onHeaderOpen: onHeaderOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/saved-movies\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(SavedMovies, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(Profile, {\n              name: \"\\u042F\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: onLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: onRegister,\n              registerError: registerError,\n              setRegisterError: setRegisterError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeaderPopup, {\n          isOpen: isPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n          image: image,\n          title: title,\n          onClose: closeAllPopups,\n          isOpen: isInfoTooLtip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"2dR0AWnLpV1ImarfzsYlVYfVkhg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js"],"names":["React","Routes","Route","Navigate","useNavigate","Movies","HeaderPopup","SavedMovies","NotFound","Profile","Login","Register","Main","Footer","CurrentUserContext","mainApi","notRegister","register","InfoTooLtip","ProtectedRoute","react","App","currentUser","setCurrentUser","useState","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","registerError","setRegisterError","image","setImage","title","setTitle","isInfoTooLtip","setIsInfoTooLtip","email","setMail","navigate","onHeaderOpen","closeAllPopups","handleInfoTooLtip","useEffect","Promise","all","getUserInfo","then","profile","catch","err","console","log","jwt","localStorage","getItem","checkToken","res","onRegister","password","name","data","id","onLogin","login","setItem","token","signOut","removeItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\n\n\nfunction App() {\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стэйт переменная открыти попапа\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n  // стэйт переменные регистрации и авторизации\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n\n  // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false);\n\n  // переменные состояния, отвечающие за отображение маил в хэдэр\n\n  const [email, setMail] = React.useState(\"\");\n\n  const navigate = useNavigate();\n\n  // открытие попапа\n \n    function onHeaderOpen() {\n        setIsPopupOpen(true)\n    }\n    // закрытие попапа\n    function closeAllPopups() {\n      setIsPopupOpen(false);\n      setIsInfoTooLtip(false);\n    }\n    // для результата авторизации и регистрации - пока не реализовано\n    function handleInfoTooLtip() {\n      setIsInfoTooLtip(true);\n    }\n\n    // загрузка информации о пользователе\n    React.useEffect(() => {\n      Promise.all(mainApi.getUserInfo())\n        .then((profile) => {\n          setCurrentUser(profile)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }, [])\n\n    // проверка токенов авторизованных пользователей, вернувшихся в приложение\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt)\n      // проверяем токен\n      mainApi\n        .checkToken(jwt)\n        .then((res) => {\n          // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n          if (res) {\n            //setMail(res.data.email);\n            setIsLoggedIn(true);\n           // navigate(\"/movies\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }, [navigate]);\n\n   // регистрация\n  function onRegister({email, password, name }) {\n    mainApi.register({ email, password, name })\n        .then((data) => {\n          if (data.id) {\n            navigate('/signin');\n            onLogin({ email, password });\n          }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      })\n  }\n  // авторизация (не реализовано)\n  function onLogin({ email, password }) {\n    mainApi.login({ email, password })\n      .then((res) => {\n       setIsLoggedIn(true);\n       navigate('/movies');\n       localStorage.setItem(\"jwt\", res.token);\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // удаление токена при выходе\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    navigate(\"/sign-in\");\n    setIsLoggedIn(false);\n  }\n\n\n  return (\n    // подключаем дерево компоненнтов к провайдеру контекста\n    <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"App\">\n          <Routes>\n            <Route path='/movies' element={\n              <Movies\n              onHeaderOpen={onHeaderOpen}\n              />\n            } />\n            <Route path=\"/\" element={\n                <Main />\n                } />\n            <Route path=\"/saved-movies\" element={\n              <>\n                <SavedMovies\n                onHeaderOpen={onHeaderOpen}\n                />\n                <Footer></Footer>\n              </>\n            } />\n            <Route path=\"/profile\" element={\n              <Profile\n              name='Яна'\n              />\n            } />\n            <Route path=\"/signin\" element={\n              <Login onLogin={onLogin}/>\n            } />\n            <Route path=\"/signup\" element={\n              <Register onRegister={onRegister} registerError={registerError} setRegisterError={setRegisterError} />\n            } />\n            <Route path=\"*\" element={\n              <NotFound />\n            } />\n          </Routes>\n\n          <HeaderPopup isOpen={isPopupOpen} onClose={closeAllPopups} />\n          <InfoTooLtip\n          image={image}\n          title={title}\n          onClose={closeAllPopups}\n          isOpen={isInfoTooLtip}\n        />\n        </div>\n      </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}