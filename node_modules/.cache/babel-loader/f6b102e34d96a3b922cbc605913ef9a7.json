{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({}); // стэйт переменная открыти попапа\n\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false); // стэйт переменные регистрации и авторизации\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\"); // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false); // переменные состояния, отвечающие за отображение маил в хэдэр\n\n  const [email, setMail] = React.useState(\"\"); // сообщение об ошибке\n  // const [message, setMessage] = React.useState('')\n  // переменная состояния для сохраненных фильмов в избранном\n\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]);\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n  const navigate = useNavigate();\n  const jwt = localStorage.getItem(\"jwt\"); // ширина\n\n  const width = ScreenSize(); // загрузка\n\n  const [isLoading, setIsLoading] = React.useState(false); // открытие попапа\n\n  function onHeaderOpen() {\n    setIsPopupOpen(true);\n  } // закрытие попапа\n\n\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  } // для результата авторизации и регистрации - пока не реализовано\n\n\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n\n  function getCards() {\n    if (width >= 1280) {\n      setMoviesCount(12);\n      setAddMovies(3);\n    } else if (width < 1279 && width >= 767) {\n      setMoviesCount(8);\n      setAddMovies(2);\n    } else if (width <= 766) {\n      setMoviesCount(5);\n      setAddMovies(1);\n    }\n  } // рендер карточек\n\n\n  useEffect(() => {\n    // рендер изначальной коллекции карточек\n    setIsLoading(true);\n    moviesApi.getInitialCards().then(movies => {\n      localStorage.setItem('movies', JSON.stringify(movies));\n      getCards();\n      setMoviesList(movies);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    }); // рендер сохраненных карточек\n\n    mainApi.getSavedMovies().then(movies => {\n      setFavoriteList(movies);\n      localStorage.setItem('savedMovies', JSON.stringify(movies));\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }, [width]); //  console.log(favoriteList)\n  //  console.log(moviesList)\n  // сохранение фильма\n\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log(movie);\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({\n      jwt,\n      movie\n    }).then(res => {\n      console.log(res);\n      console.log(favoriteList);\n      setFavoriteList([...favoriteList, res]);\n      localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление фильма\n\n\n  function handleDeleteMovies(movie) {\n    //    setIsLoading(true);\n    const jwt = localStorage.getItem(\"jwt\"); //  console.log(movie)\n\n    const id = movie.movieId || movie.id;\n\n    const movieId = movie._id || favoriteList.find(item => item.movieId === movie.id)._id; //  console.log(id)\n\n\n    mainApi.deleteMovies({\n      jwt,\n      movieId\n    }).then(res => {\n      console.log(res);\n\n      if (res) {\n        const arr = favoriteList.filter(item => item.movieId !== id);\n        setFavoriteList(arr);\n        localStorage.setItem('savedMovies', JSON.stringify(arr));\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // изменение инорфмации о пользователе\n\n\n  function handleUpdateUser(_ref) {\n    let {\n      name,\n      email\n    } = _ref;\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({\n      jwt,\n      name,\n      email\n    }).then(user => {\n      setTitle(\"Данные успешно изменены!\");\n      setImage(register);\n\n      if (user._id) {\n        setCurrentUser(user);\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setChangeError('Что-то пошло не так! Попробуйте ещё раз.');\n      setImage(notRegister);\n      setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n    }).finally(handleInfoTooLtip);\n  } // проверка токенов авторизованных пользователей, вернувшихся в приложение\n\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) // проверяем токен\n      mainApi.checkToken(jwt).then(res => {\n        // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n        if (res) {\n          setCurrentUser(res);\n          setIsLoggedIn(true); // navigate(\"/\");\n        } else {\n          setCurrentUser({});\n        }\n      }).catch(err => {\n        console.log(`Внимание! ${err}`);\n        navigate(\"/signin\");\n      });\n  }, [navigate]); // регистрация\n\n  function onRegister(_ref2) {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    //  setIsLoading(true);\n    mainApi.register({\n      email,\n      password,\n      name\n    }).then(data => {\n      if (data.id) {\n        navigate('/signin');\n        onLogin({\n          email,\n          password\n        });\n      }\n\n      setTitle(\"Вы успешно зарегистрировались!\");\n      setImage(register);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n    }).finally(handleInfoTooLtip);\n  } // авторизация\n\n\n  function onLogin(_ref3) {\n    let {\n      email,\n      password\n    } = _ref3;\n    //   setIsLoading(true);\n    mainApi.login({\n      email,\n      password\n    }).then(res => {\n      if (res.token) {\n        localStorage.setItem(\"jwt\", res.token); //  console.log(res.token);\n\n        setIsLoggedIn(true);\n        navigate('/movies');\n        return res;\n      } else {\n        return;\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setLoginError('Что-то пошло не так, попробуйте еще раз!');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      handleInfoTooLtip();\n    });\n  } // удаление токена при выходе\n\n\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem('savedMovies');\n    navigate(\"/signin\");\n    setFavoriteList([]);\n    setMoviesList([]);\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n  return (\n    /*#__PURE__*/\n    // подключаем дерево компоненнтов к провайдеру контекста\n    _jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movies\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Movies, {\n                onHeaderOpen: onHeaderOpen,\n                handleSaveMovies: handleSaveMovies,\n                handleDeleteMovies: handleDeleteMovies,\n                favoriteList: favoriteList,\n                moviesList: moviesList,\n                setMoviesList: setMoviesList,\n                moviesCount: moviesCount,\n                setMoviesCount: setMoviesCount,\n                addMovies: addMovies,\n                setAddMovies: setAddMovies,\n                isLoading: isLoading,\n                setIsLoading: setIsLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/saved-movies\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(SavedMovies, {\n                onHeaderOpen: onHeaderOpen,\n                favoriteList: favoriteList,\n                setFavoriteList: setFavoriteList,\n                handleDeleteMovies: handleDeleteMovies,\n                moviesList: moviesList,\n                setMoviesList: setMoviesList,\n                moviesCount: moviesCount,\n                setMoviesCount: setMoviesCount,\n                addMovies: addMovies,\n                setAddMovies: setAddMovies,\n                isLoading: isLoading,\n                setIsLoading: setIsLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Profile, {\n                signOut: signOut,\n                onUpdateUser: handleUpdateUser,\n                changeError: changeError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: onLogin,\n              loginError: loginError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: onRegister,\n              registerError: registerError,\n              setRegisterError: setRegisterError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(HeaderPopup, {\n          isOpen: isPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n          image: image,\n          title: title,\n          onClose: closeAllPopups,\n          isOpen: isInfoTooLtip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"D8DsR9avkApgKIYPHZD5eribL6Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n/*\n1 Валидация формы редактирования профиля\n\n2 Уведолмение об успешном изменении информации о пользователе\n\n3 Если на странице редактирования профиля введённая информация соответствует текущим данным пользователя, \nкнопка «Сохранить» заблокирована и нельзя отправить запрос сохранения.\n\n4 защита роутов НОС компонентами\n\n5 хук useHistory\n\n6 асинхронные запросы. Сейчас делаются лишние запросы к бэкэнду\n\n7 форматирование кода и удаление мусора\n\n8 ошибки в консоли при запуске\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js"],"names":["React","useEffect","Routes","Route","Navigate","useNavigate","Movies","HeaderPopup","SavedMovies","NotFound","Profile","Login","Register","Main","Footer","CurrentUserContext","mainApi","moviesApi","notRegister","register","InfoTooLtip","ProtectedRoute","react","Header","Navigation","SigninButton","ScreenSize","App","currentUser","setCurrentUser","useState","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","registerError","setRegisterError","loginError","setLoginError","changeError","setChangeError","image","setImage","title","setTitle","isInfoTooLtip","setIsInfoTooLtip","email","setMail","favoriteList","setFavoriteList","moviesList","setMoviesList","moviesCount","setMoviesCount","addMovies","setAddMovies","navigate","jwt","localStorage","getItem","width","isLoading","setIsLoading","onHeaderOpen","closeAllPopups","handleInfoTooLtip","getCards","getInitialCards","then","movies","setItem","JSON","stringify","catch","err","console","log","getSavedMovies","handleSaveMovies","movie","savedMovies","res","handleDeleteMovies","id","movieId","_id","find","item","deleteMovies","arr","filter","handleUpdateUser","name","updateUser","user","finally","checkToken","onRegister","password","data","onLogin","login","token","signOut","removeItem"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\n\n\nfunction App() {\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стэйт переменная открыти попапа\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n  // стэйт переменные регистрации и авторизации\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\");\n\n  // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false);\n\n  // переменные состояния, отвечающие за отображение маил в хэдэр\n\n  const [email, setMail] = React.useState(\"\");\n\n  // сообщение об ошибке\n // const [message, setMessage] = React.useState('')\n\n  // переменная состояния для сохраненных фильмов в избранном\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]);\n\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n\n  const navigate = useNavigate();\n  const jwt = localStorage.getItem(\"jwt\");\n\n  // ширина\n  const width = ScreenSize();\n\n  // загрузка\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  // открытие попапа\n  function onHeaderOpen() {\n    setIsPopupOpen(true)\n  }\n  // закрытие попапа\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  }\n  // для результата авторизации и регистрации - пока не реализовано\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n\n\n  function getCards() {\n    if (width >= 1280) {\n      setMoviesCount(12);\n      setAddMovies(3);\n    } else if (width < 1279 && width >= 767) {\n      setMoviesCount(8);\n      setAddMovies(2);\n    } else if (width <= 766) {\n      setMoviesCount(5);\n      setAddMovies(1);\n    }\n  }\n\n  // рендер карточек\n  useEffect(() => {\n    // рендер изначальной коллекции карточек\n      setIsLoading(true);\n      moviesApi.getInitialCards()\n        .then((movies) => {\n          localStorage.setItem('movies', JSON.stringify(movies));\n          getCards()\n          setMoviesList(movies);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          console.log(`Внимание! ${err}`);\n        });\n        // рендер сохраненных карточек\n        mainApi.getSavedMovies()\n          .then((movies) => {\n            setFavoriteList(movies)\n            localStorage.setItem('savedMovies', JSON.stringify(movies));\n          }).catch((err) => {\n            console.log(`Внимание! ${err}`);\n          })\n  }, [width]); \n  \n  \n \n\n//  console.log(favoriteList)\n//  console.log(moviesList)\n\n  // сохранение фильма\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log(movie)\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({ jwt, movie })\n      .then((res) => {\n        console.log(res);\n        console.log(favoriteList)\n        setFavoriteList([...favoriteList, res]);\n        localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // удаление фильма\n  function handleDeleteMovies(movie) {\n//    setIsLoading(true);\n    const jwt = localStorage.getItem(\"jwt\");\n    //  console.log(movie)\n    const id = movie.movieId || movie.id;\n    const movieId =\n      movie._id || favoriteList.find((item) => item.movieId === movie.id)._id;\n    //  console.log(id)\n    mainApi.deleteMovies({ jwt, movieId }).\n      then((res) => {\n        console.log(res);\n        if (res) {\n          const arr = favoriteList.filter((item) => item.movieId !== id);\n          setFavoriteList(arr);\n          localStorage.setItem('savedMovies', JSON.stringify(arr));\n        }\n\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // изменение инорфмации о пользователе\n  function handleUpdateUser({ name, email }) {\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({ jwt, name, email })\n      .then((user) => {\n        setTitle(\"Данные успешно изменены!\");\n        setImage(register);\n        if (user._id) {\n          setCurrentUser(user);\n        }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setChangeError('Что-то пошло не так! Попробуйте ещё раз.')\n        setImage(notRegister);\n        setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n      }).finally(handleInfoTooLtip)\n  }\n\n  // проверка токенов авторизованных пользователей, вернувшихся в приложение\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt)\n      // проверяем токен\n      mainApi\n        .checkToken(jwt)\n        .then((res) => {\n          // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n          if (res) {\n            setCurrentUser(res)\n            setIsLoggedIn(true);\n           // navigate(\"/\");\n          } else {\n            setCurrentUser({})\n          }\n        })\n        .catch((err) => {\n          console.log(`Внимание! ${err}`);\n          navigate(\"/signin\");\n        });\n  }, [navigate]);\n\n  // регистрация\n  function onRegister({ email, password, name }) {\n  //  setIsLoading(true);\n    mainApi.register({ email, password, name })\n      .then((data) => {\n        if (data.id) {\n          navigate('/signin');\n          onLogin({ email, password });\n        }\n        setTitle(\"Вы успешно зарегистрировались!\");\n        setImage(register);\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      }).finally(handleInfoTooLtip)\n  }\n\n  // авторизация\n  function onLogin({ email, password }) {\n //   setIsLoading(true);\n    mainApi.login({ email, password })\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem(\"jwt\", res.token);\n          //  console.log(res.token);\n          setIsLoggedIn(true);\n          navigate('/movies');\n          return res;\n        } else {\n          return\n        }\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setLoginError('Что-то пошло не так, попробуйте еще раз!');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        handleInfoTooLtip()\n      })\n  }\n\n  // удаление токена при выходе\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem('savedMovies');\n    navigate(\"/signin\");\n    setFavoriteList([]);\n    setMoviesList([]);\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n\n  return (\n    // подключаем дерево компоненнтов к провайдеру контекста\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Routes>\n          <Route path='/movies' element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <Movies onHeaderOpen={onHeaderOpen}\n                handleSaveMovies={handleSaveMovies}\n                handleDeleteMovies={handleDeleteMovies}\n                favoriteList={favoriteList}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              />\n            </>\n          } />\n          <Route path=\"/\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <Main />\n            </>\n          } />\n          <Route path=\"/saved-movies\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <SavedMovies\n                onHeaderOpen={onHeaderOpen}\n                favoriteList={favoriteList}\n                setFavoriteList={setFavoriteList}\n                handleDeleteMovies={handleDeleteMovies}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              />\n            </>\n          } />\n          <Route path=\"/profile\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <Profile signOut={signOut} onUpdateUser={handleUpdateUser} changeError={changeError} />\n            </>\n          } />\n          <Route path=\"/signin\" element={\n            <Login onLogin={onLogin} loginError={loginError} />\n          } />\n          <Route path=\"/signup\" element={\n            <Register onRegister={onRegister} registerError={registerError} setRegisterError={setRegisterError} />\n          } />\n          <Route path=\"*\" element={\n            <NotFound />\n          } />\n        </Routes>\n\n        <HeaderPopup isOpen={isPopupOpen} onClose={closeAllPopups} />\n        <InfoTooLtip\n          image={image}\n          title={title}\n          onClose={closeAllPopups}\n          isOpen={isInfoTooLtip}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n\n/*\n1 Валидация формы редактирования профиля\n\n2 Уведолмение об успешном изменении информации о пользователе\n\n3 Если на странице редактирования профиля введённая информация соответствует текущим данным пользователя, \nкнопка «Сохранить» заблокирована и нельзя отправить запрос сохранения.\n\n4 защита роутов НОС компонентами\n\n5 хук useHistory\n\n6 асинхронные запросы. Сейчас делаются лишние запросы к бэкэнду\n\n7 форматирование кода и удаление мусора\n\n8 ошибки в консоли при запуске\n\n*/"]},"metadata":{},"sourceType":"module"}