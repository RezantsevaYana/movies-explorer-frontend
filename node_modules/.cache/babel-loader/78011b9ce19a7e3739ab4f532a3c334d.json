{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooltip.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\"); // переменные состояния для попапов результата регистрации\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const navigate = useNavigate();\n\n  function onHeaderOpen() {\n    setIsPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n  }\n\n  function onRegister(_ref) {\n    let {\n      email,\n      password,\n      name\n    } = _ref;\n    mainApi.register({\n      email,\n      password,\n      name\n    }).then(data => {\n      if (data.id) {\n        setTitle(\"Вы успешно зарегистрировались!\");\n        setImage(register);\n        navigate('/signin');\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n      if (err === 400) return setRegisterError('некорректно заполнено одно из полей ');\n    });\n  }\n\n  function onLogin(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    mainApi.login({\n      email,\n      password\n    }).then(res => {\n      setIsLoggedIn(true);\n      navigate('/');\n      localStorage.setItem(\"jwt\", res.token);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление токена при выходе\n\n\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    navigate(\"/sign-in\");\n    setIsLoggedIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(Movies, {\n            onHeaderOpen: onHeaderOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/saved-movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(SavedMovies, {\n              onHeaderOpen: onHeaderOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {\n            name: \"\\u042F\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            title: \"\\u0420\\u0430\\u0434\\u044B \\u0432\\u0438\\u0434\\u0435\\u0442\\u044C!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: onRegister,\n            title: \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HeaderPopup, {\n        isOpen: isPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n        image: image,\n        title: title,\n        onClose: closeAllPopups,\n        isOpen: isInfoTooLtip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aHgb/2FVIlwb+7j5SuvrupPLFWk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js"],"names":["React","Routes","Route","Navigate","useNavigate","Movies","HeaderPopup","SavedMovies","NotFound","Profile","Login","Register","Main","Footer","CurrentUserContext","mainApi","notRegister","register","InfoTooLtip","App","currentUser","setCurrentUser","useState","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","registerError","setRegisterError","image","setImage","title","setTitle","navigate","onHeaderOpen","closeAllPopups","onRegister","email","password","name","then","data","id","catch","err","console","log","onLogin","login","res","localStorage","setItem","token","signOut","removeItem","isInfoTooLtip"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooltip.js';\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n\n  // переменные состояния для попапов результата регистрации\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n\n  const navigate = useNavigate();\n \n    function onHeaderOpen() {\n        setIsPopupOpen(true)\n    }\n\n    function closeAllPopups() {\n      setIsPopupOpen(false)\n    }\n\n  function onRegister({email, password, name }) {\n    mainApi.register({ email, password, name })\n        .then((data) => {\n          if (data.id) {\n            setTitle(\"Вы успешно зарегистрировались!\");\n            setImage(register);\n            navigate('/signin');\n          }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n        if (err === 400) return setRegisterError('некорректно заполнено одно из полей ');\n      })\n  }\n\n  function onLogin({ email, password }) {\n    mainApi.login({ email, password })\n      .then((res) => {\n        setIsLoggedIn(true);\n        navigate('/');\n        localStorage.setItem(\"jwt\", res.token);\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // удаление токена при выходе\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    navigate(\"/sign-in\");\n    setIsLoggedIn(false);\n  }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"App\">\n          <Routes>\n            <Route path='/movies' element={\n              <Movies\n              onHeaderOpen={onHeaderOpen}\n              />\n            }></Route>\n            <Route path=\"/\" element={\n                <Main />\n                }>\n            </Route>\n            <Route path=\"/saved-movies\" element={\n              <>\n                <SavedMovies\n                onHeaderOpen={onHeaderOpen}\n                />\n                <Footer></Footer>\n              </>\n            }>\n            </Route>\n            <Route path=\"/profile\" element={\n              <Profile\n              name='Яна'\n              ></Profile>\n            }>\n            </Route>\n            <Route path=\"/signin\" element={\n              <Login\n              title=\"Рады видеть!\"></Login>\n            }></Route>\n            <Route path=\"/signup\" element={\n              <Register onRegister={onRegister}\n              title=\"Добро пожаловать!\"\n              ></Register>\n            }></Route>\n            <Route path=\"*\" element={\n              <NotFound></NotFound>\n            }\n            ></Route>\n          </Routes>\n\n          <HeaderPopup isOpen={isPopupOpen} onClose={closeAllPopups} />\n          <InfoTooLtip\n          image={image}\n          title={title}\n          onClose={closeAllPopups}\n          isOpen={isInfoTooLtip}\n        />\n        </div>\n      </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}