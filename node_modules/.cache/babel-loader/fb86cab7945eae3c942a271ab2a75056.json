{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport AnotherButton from \"../AnotherButton/AnotherButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MoviesCardList() {\n  _s();\n\n  const [moviesList, setMoviesList] = useState([]);\n  const [moviesCount, setMoviesCount] = useState(12);\n  useEffect(() => {\n    Promise.all(moviesApi.getInitialCards()).then(movie => {\n      setMoviesList(movie);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: moviesList.length === 0 ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this) : moviesList.map((item, index) => {\n      if (index + 1 <= moviesCount) {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"movies-list\",\n          children: [/*#__PURE__*/_jsxDEV(MoviesCard, {\n            movie: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(AnotherButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this);\n      } else {\n        return \"\";\n      }\n    })\n  }, void 0, false);\n}\n\n_s(MoviesCardList, \"eDect0569TIj58q8dNlt2rBf0WA=\");\n\n_c = MoviesCardList;\nexport default MoviesCardList;\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} /><AnotherButton></AnotherButton>;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"names":["React","useEffect","useState","moviesApi","MoviesCard","Preloader","AnotherButton","MoviesCardList","moviesList","setMoviesList","moviesCount","setMoviesCount","Promise","all","getInitialCards","then","movie","catch","err","console","log","length","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACW,eAAV,EAAZ,EACKC,IADL,CACWC,KAAD,IAAW;AACbP,MAAAA,aAAa,CAACO,KAAD,CAAb;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYF,GAAI,EAA7B;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;AAYA,sBACI;AAAA,cAEQV,UAAU,CAACa,MAAX,KAAsB,CAAtB,gBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADD,GAEIb,UAAU,CAACc,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B,UAAIA,KAAK,GAAC,CAAN,IAAWd,WAAf,EAA4B;AACxB,4BACA;AAAS,UAAA,SAAS,EAAC,aAAnB;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEa;AAAnB,aAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AAKH,OAND,MAMO;AACH,eAAO,EAAP;AACH;AACJ,KAVD;AAJZ,mBADJ;AAoBH;;GApCQjB,c;;KAAAA,c;AAsCT,eAAeA,cAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport AnotherButton from \"../AnotherButton/AnotherButton.js\";\n\nfunction MoviesCardList() {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => {\n        Promise.all(moviesApi.getInitialCards())\n            .then((movie) => {\n                setMoviesList(movie)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            });\n    }, []);\n\n\n\n    return (\n        <>\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) : (\n                    moviesList.map((item, index) => {\n                        if (index+1 <= moviesCount) {\n                            return (\n                            <section className=\"movies-list\">\n                                <MoviesCard movie={item} key={index} />\n                                <AnotherButton />;\n                            </section>)\n                        } else {\n                            return \"\";\n                        }\n                    })\n                )\n            }\n        </>\n    );\n}\n\nexport default MoviesCardList;\n\n\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} /><AnotherButton></AnotherButton>;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n"]},"metadata":{},"sourceType":"module"}