{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // фильмы\n  const allMovies = JSON.parse(localStorage.getItem('allMovies')); // весь список фильмов\n\n  const initialMovies = JSON.parse(localStorage.getItem('initialMovies')); // список который будет отфильтрован\n\n  const savedMovies = JSON.parse(localStorage.getItem('savedMovies')); // сохраненные фильмы\n\n  const initialSavedMovies = JSON.parse(localStorage.getItem('initialFavoriteMovies')); // фильтр по сохраненным фильмам\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n\n  const [currentUser, setCurrentUser] = React.useState({}); // стэйт переменная открыти попапа\n\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false); // стэйт переменные регистрации и авторизации\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\"); // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false); // переменная состояния для сохраненных фильмов в избранном\n\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]); // переменные состояния для добавления фильмов\n\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n  const navigate = useNavigate(); // ширина\n\n  const width = ScreenSize(); // отображение прейлодера\n\n  const [isLoading, setIsLoading] = React.useState(false); // открытие попапов\n\n  function onHeaderOpen() {\n    setIsPopupOpen(true);\n  } // закрытие попапов\n\n\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  } // для результата авторизации и регистрации и изменения пользователя\n\n\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n\n  useEffect(() => {\n    function getCards() {\n      if (width >= 1280) {\n        setMoviesCount(12);\n        setAddMovies(3);\n      } else if (width < 1279 && width >= 767) {\n        setMoviesCount(8);\n        setAddMovies(2);\n      } else if (width <= 766) {\n        setMoviesCount(5);\n        setAddMovies(1);\n      }\n    }\n\n    getCards();\n  }, [width]);\n  React.useEffect(() => {\n    const movies = JSON.parse(sessionStorage.getItem('movies'));\n\n    if (!movies) {\n      moviesApi.getInitialCards().then(data => {\n        sessionStorage.setItem('movies', JSON.stringify(data));\n        localStorage.setItem('initialMovies', JSON.stringify(data));\n        setMoviesList(data);\n      }).catch(err => console.log(err));\n    } else {\n      setMoviesList(allMovies);\n    }\n\n    const savedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n    const jwt = localStorage.getItem(\"jwt\");\n\n    if (!savedMovies) {\n      mainApi.getSavedMovies(jwt).then(data => {\n        setFavoriteList(data.data);\n        localStorage.setItem('savedMovies', JSON.stringify(data.data));\n        localStorage.setItem('initialSavedMovies', JSON.stringify(data.data));\n      }).catch(err => console.log(err));\n    } else {\n      setFavoriteList(savedMovies);\n    }\n  }, []);\n  /*\n   // загрузка первоначальной коллекции карточек и информации о пользователе\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    setIsLoading(true);\n    Promise.all([mainApi.getUserInfo(jwt), moviesApi.getInitialCards(), mainApi.getSavedMovies(jwt)])\n      .then(([profile, movies, cards]) => {\n        setCurrentUser(profile);\n        setMoviesList(movies);\n        setIsLoading(false);\n        console.log(cards)\n    //    setFavoriteList(Object.keys(cards));\n        sessionStorage.setItem('movies', JSON.stringify(movies));\n        localStorage.setItem('savedMovies', JSON.stringify(cards));\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      });\n  }, []);\n   */\n  // сохранение фильма\n\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\"); //   console.log(movie)\n\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({\n      jwt,\n      movie\n    }).then(res => {\n      //     console.log(res);\n      //     console.log(favoriteList)\n      setFavoriteList([...favoriteList, res]);\n      sessionStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление фильма\n\n\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    const id = movie.movieId || movie.id;\n\n    const movieId = movie._id || favoriteList.find(item => item.movieId === movie.id)._id;\n\n    mainApi.deleteMovies({\n      jwt,\n      movieId\n    }).then(res => {\n      console.log(res);\n\n      if (res) {\n        const arr = favoriteList.filter(item => item.movieId !== id);\n        setFavoriteList(arr);\n        sessionStorage.setItem('savedMovies', JSON.stringify(arr));\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // изменение инорфмации о пользователе\n\n\n  function handleUpdateUser(_ref) {\n    let {\n      name,\n      email\n    } = _ref;\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({\n      jwt,\n      name,\n      email\n    }).then(user => {\n      setTitle(\"Данные успешно изменены!\");\n      setImage(register);\n\n      if (user._id) {\n        setCurrentUser(user);\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setChangeError('Что-то пошло не так! Попробуйте ещё раз.');\n      setImage(notRegister);\n      setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n    }).finally(handleInfoTooLtip);\n  } // проверка токенов авторизованных пользователей, вернувшихся в приложение\n\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) // проверяем токен\n      mainApi.checkToken(jwt).then(res => {\n        // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n        if (res) {\n          setCurrentUser(res);\n          setIsLoggedIn(true); // navigate(\"/\");\n        } else {\n          setCurrentUser({});\n        }\n      }).catch(err => {\n        console.log(`Внимание! ${err}`);\n        navigate(\"/signin\");\n      });\n  }, [navigate]); // регистрация\n\n  function onRegister(_ref2) {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    mainApi.register({\n      email,\n      password,\n      name\n    }).then(data => {\n      onLogin({\n        email,\n        password\n      });\n      navigate('/movies');\n      setTitle(\"Вы успешно зарегистрировались!\");\n      setImage(register);\n      setIsLoggedIn(true);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n    }).finally(handleInfoTooLtip);\n  } // авторизация\n\n\n  function onLogin(_ref3) {\n    let {\n      email,\n      password\n    } = _ref3;\n    mainApi.login({\n      email,\n      password\n    }).then(res => {\n      localStorage.setItem(\"jwt\", res.token);\n      localStorage.setItem('currentUser', JSON.stringify(res)); // console.log(res.token);\n\n      setIsLoggedIn(true);\n      navigate('/movies');\n      return res;\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setLoginError('Что-то пошло не так, попробуйте еще раз!');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      handleInfoTooLtip();\n    });\n  } // удаление токена при выходе\n\n\n  function signOut() {\n    localStorage.clear();\n    sessionStorage.clear();\n    navigate(\"/\");\n    setFavoriteList([]);\n    setMoviesList([]);\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              isLoggedIn: isLoggedIn,\n              component: Movies,\n              onHeaderOpen: onHeaderOpen,\n              handleSaveMovies: handleSaveMovies,\n              handleDeleteMovies: handleDeleteMovies,\n              favoriteList: favoriteList,\n              moviesList: moviesList,\n              setMoviesList: setMoviesList,\n              moviesCount: moviesCount,\n              setMoviesCount: setMoviesCount,\n              addMovies: addMovies,\n              setAddMovies: setAddMovies,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/saved-movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              component: SavedMovies,\n              isLoggedIn: isLoggedIn,\n              onHeaderOpen: onHeaderOpen,\n              favoriteList: favoriteList,\n              setFavoriteList: setFavoriteList,\n              handleDeleteMovies: handleDeleteMovies,\n              moviesList: moviesList,\n              setMoviesList: setMoviesList,\n              moviesCount: moviesCount,\n              setMoviesCount: setMoviesCount,\n              addMovies: addMovies,\n              setAddMovies: setAddMovies,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              component: Profile,\n              isLoggedIn: isLoggedIn,\n              signOut: signOut,\n              onUpdateUser: handleUpdateUser,\n              changeError: changeError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Login,\n            isLoggedIn: !isLoggedIn,\n            onLogin: onLogin,\n            loginError: loginError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Register,\n            isLoggedIn: !isLoggedIn,\n            onRegister: onRegister,\n            registerError: registerError,\n            setRegisterError: setRegisterError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderPopup, {\n        isOpen: isPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n        image: image,\n        title: title,\n        onClose: closeAllPopups,\n        isOpen: isInfoTooLtip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OoIlXg04jZOyEjJ4rIATm2fbbDM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n/*\nне могу понять как работать со списком сохраненных фильмов\nизначально массив пустой\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js"],"names":["React","useEffect","Routes","Route","Navigate","useNavigate","Movies","HeaderPopup","SavedMovies","NotFound","Profile","Login","Register","Main","CurrentUserContext","mainApi","moviesApi","notRegister","register","InfoTooLtip","Header","Navigation","SigninButton","ScreenSize","ProtectedRoute","react","App","allMovies","JSON","parse","localStorage","getItem","initialMovies","savedMovies","initialSavedMovies","currentUser","setCurrentUser","useState","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","registerError","setRegisterError","loginError","setLoginError","changeError","setChangeError","image","setImage","title","setTitle","isInfoTooLtip","setIsInfoTooLtip","favoriteList","setFavoriteList","moviesList","setMoviesList","moviesCount","setMoviesCount","addMovies","setAddMovies","navigate","width","isLoading","setIsLoading","onHeaderOpen","closeAllPopups","handleInfoTooLtip","getCards","movies","sessionStorage","getInitialCards","then","data","setItem","stringify","catch","err","console","log","jwt","getSavedMovies","handleSaveMovies","movie","res","handleDeleteMovies","id","movieId","_id","find","item","deleteMovies","arr","filter","handleUpdateUser","name","email","updateUser","user","finally","checkToken","onRegister","password","onLogin","login","token","signOut","clear"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\n\n\nfunction App() {\n  // фильмы\n  const allMovies = JSON.parse(localStorage.getItem('allMovies'));  // весь список фильмов\n  const initialMovies = JSON.parse(localStorage.getItem('initialMovies')); // список который будет отфильтрован\n\n  const savedMovies = JSON.parse(localStorage.getItem('savedMovies')); // сохраненные фильмы\n  const initialSavedMovies = JSON.parse(\n    localStorage.getItem('initialFavoriteMovies')\n  );      // фильтр по сохраненным фильмам\n\n\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стэйт переменная открыти попапа\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n  // стэйт переменные регистрации и авторизации\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\");\n\n  // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false);\n\n  // переменная состояния для сохраненных фильмов в избранном\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]);\n  // переменные состояния для добавления фильмов\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n\n  const navigate = useNavigate();\n\n  // ширина\n  const width = ScreenSize();\n\n  // отображение прейлодера\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  // открытие попапов\n  function onHeaderOpen() {\n    setIsPopupOpen(true)\n  }\n\n  // закрытие попапов\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  }\n  // для результата авторизации и регистрации и изменения пользователя\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n\n\n\n  useEffect(() => {\n    function getCards() {\n      if (width >= 1280) {\n        setMoviesCount(12);\n        setAddMovies(3);\n      } else if (width < 1279 && width >= 767) {\n        setMoviesCount(8);\n        setAddMovies(2);\n      } else if (width <= 766) {\n        setMoviesCount(5);\n        setAddMovies(1);\n      }\n    }\n    getCards()\n  }, [width])\n\n  React.useEffect(() => {\n    const movies = JSON.parse(sessionStorage.getItem('movies'));\n    if (!movies) {\n      moviesApi.getInitialCards()\n        .then((data) => {\n          sessionStorage.setItem('movies', JSON.stringify(data));\n          localStorage.setItem('initialMovies', JSON.stringify(data));\n          setMoviesList(data);\n        })\n        .catch((err) => console.log(err));\n    } else {\n      setMoviesList(allMovies);\n    }\n    const savedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n    const jwt = localStorage.getItem(\"jwt\");\n    if (!savedMovies) {\n      mainApi.getSavedMovies(jwt)\n        .then((data) => {\n          setFavoriteList(data.data);\n          localStorage.setItem('savedMovies', JSON.stringify(data.data));\n          localStorage.setItem('initialSavedMovies', JSON.stringify(data.data));\n        })\n        .catch((err) => console.log(err));\n    } else {\n      setFavoriteList(savedMovies);\n    }\n  }, [])\n\n\n  /*\n\n  // загрузка первоначальной коллекции карточек и информации о пользователе\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    setIsLoading(true);\n    Promise.all([mainApi.getUserInfo(jwt), moviesApi.getInitialCards(), mainApi.getSavedMovies(jwt)])\n      .then(([profile, movies, cards]) => {\n        setCurrentUser(profile);\n        setMoviesList(movies);\n        setIsLoading(false);\n        console.log(cards)\n    //    setFavoriteList(Object.keys(cards));\n        sessionStorage.setItem('movies', JSON.stringify(movies));\n        localStorage.setItem('savedMovies', JSON.stringify(cards));\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      });\n  }, []);\n\n  */\n\n\n  // сохранение фильма\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    //   console.log(movie)\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({ jwt, movie })\n      .then((res) => {\n   //     console.log(res);\n        //     console.log(favoriteList)\n        setFavoriteList([...favoriteList, res]);\n        sessionStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // удаление фильма\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    const id = movie.movieId || movie.id;\n    const movieId =\n      movie._id || favoriteList.find((item) => item.movieId === movie.id)._id;\n    mainApi.deleteMovies({ jwt, movieId }).\n      then((res) => {\n        console.log(res);\n        if (res) {\n          const arr = favoriteList.filter((item) => item.movieId !== id);\n          setFavoriteList(arr);\n          sessionStorage.setItem('savedMovies', JSON.stringify(arr));\n        }\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // изменение инорфмации о пользователе\n  function handleUpdateUser({ name, email }) {\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({ jwt, name, email })\n      .then((user) => {\n        setTitle(\"Данные успешно изменены!\");\n        setImage(register);\n        if (user._id) {\n          setCurrentUser(user);\n        }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setChangeError('Что-то пошло не так! Попробуйте ещё раз.')\n        setImage(notRegister);\n        setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n      }).finally(handleInfoTooLtip)\n  }\n\n  // проверка токенов авторизованных пользователей, вернувшихся в приложение\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt)\n      // проверяем токен\n      mainApi\n        .checkToken(jwt)\n        .then((res) => {\n          // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n          if (res) {\n            setCurrentUser(res)\n            setIsLoggedIn(true);\n            // navigate(\"/\");\n          } else {\n            setCurrentUser({})\n          }\n        })\n        .catch((err) => {\n          console.log(`Внимание! ${err}`);\n          navigate(\"/signin\");\n        });\n  }, [navigate]);\n\n  // регистрация\n  function onRegister({ email, password, name }) {\n    mainApi.register({ email, password, name })\n      .then((data) => {\n        onLogin({ email, password });\n        navigate('/movies');\n        setTitle(\"Вы успешно зарегистрировались!\");\n        setImage(register);\n        setIsLoggedIn(true);\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      }).finally(handleInfoTooLtip)\n  }\n\n  // авторизация\n  function onLogin({ email, password }) {\n    mainApi.login({ email, password })\n      .then((res) => {\n        localStorage.setItem(\"jwt\", res.token);\n        localStorage.setItem('currentUser', JSON.stringify(res));\n        // console.log(res.token);\n        setIsLoggedIn(true);\n        navigate('/movies');\n        return res;\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setLoginError('Что-то пошло не так, попробуйте еще раз!');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        handleInfoTooLtip()\n      })\n  }\n\n  // удаление токена при выходе\n  function signOut() {\n    localStorage.clear();\n    sessionStorage.clear();\n    navigate(\"/\");\n    setFavoriteList([]);\n    setMoviesList([]);\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Routes>\n          <Route path='/movies' element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <ProtectedRoute\n                isLoggedIn={isLoggedIn}\n                component={Movies}\n                onHeaderOpen={onHeaderOpen}\n                handleSaveMovies={handleSaveMovies}\n                handleDeleteMovies={handleDeleteMovies}\n                favoriteList={favoriteList}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              ></ProtectedRoute>\n            </>\n          } ></Route>\n          <Route path=\"/\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <Main />\n            </>\n          } />\n          <Route path=\"/saved-movies\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <ProtectedRoute\n                component={SavedMovies}\n                isLoggedIn={isLoggedIn}\n                onHeaderOpen={onHeaderOpen}\n                favoriteList={favoriteList}\n                setFavoriteList={setFavoriteList}\n                handleDeleteMovies={handleDeleteMovies}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              >\n              </ProtectedRoute>\n            </>\n          } />\n          <Route path=\"/profile\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <ProtectedRoute\n                component={Profile}\n                isLoggedIn={isLoggedIn}\n                signOut={signOut}\n                onUpdateUser={handleUpdateUser}\n                changeError={changeError}\n              >\n              </ProtectedRoute>\n            </>\n          } />\n          <Route path=\"/signin\"\n            element={<ProtectedRoute\n              component={Login}\n              isLoggedIn={!isLoggedIn}\n              onLogin={onLogin}\n              loginError={loginError}\n            ></ProtectedRoute>} />\n          <Route path=\"/signup\" element={\n            <ProtectedRoute\n              component={Register}\n              isLoggedIn={!isLoggedIn}\n              onRegister={onRegister}\n              registerError={registerError}\n              setRegisterError={setRegisterError}>\n            </ProtectedRoute>\n          } />\n          <Route path=\"*\" element={\n            <NotFound />\n          } />\n        </Routes>\n\n        <HeaderPopup isOpen={isPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <InfoTooLtip\n          image={image}\n          title={title}\n          onClose={closeAllPopups}\n          isOpen={isInfoTooLtip}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n\n/*\nне могу понять как работать со списком сохраненных фильмов\nизначально массив пустой\n*/"]},"metadata":{},"sourceType":"module"}