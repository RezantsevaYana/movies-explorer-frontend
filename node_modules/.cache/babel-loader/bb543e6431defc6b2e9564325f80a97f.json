{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({}); // стэйт переменная открыти попапа\n\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false); // стэйт переменные регистрации и авторизации\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [isUserCheck, setIsUserCheck] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\"); // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false); // переменная состояния для сохраненных фильмов в избранном\n\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]); // переменные состояния для добавления фильмов\n\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n  const navigate = useNavigate(); // ширина\n\n  const width = ScreenSize(); // отображение прейлодера\n\n  const [isLoading, setIsLoading] = React.useState(false); // открытие попапов\n\n  function onHeaderOpen() {\n    setIsPopupOpen(true);\n  } // закрытие попапов\n\n\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  } // для результата авторизации и регистрации и изменения пользователя\n\n\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  } // добавление карточек в зависимости от ширины экрана\n\n\n  useEffect(() => {\n    function getCards() {\n      if (width >= 1280) {\n        setMoviesCount(12);\n        setAddMovies(3);\n      } else if (width < 1279 && width >= 767) {\n        setMoviesCount(8);\n        setAddMovies(2);\n      } else if (width <= 766) {\n        setMoviesCount(5);\n        setAddMovies(1);\n      }\n    }\n\n    getCards();\n  }, [width]); // рендер коллекции карточек\n\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    setIsLoading(true); // рендер первоначальной коллекции фильмов\n\n    moviesApi.getInitialCards().then(movies => {\n      setMoviesList(movies);\n      sessionStorage.setItem('movies', JSON.stringify(movies));\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    }); // рендер сохраненных фильмов\n\n    mainApi.getMovies(jwt).then(res => {\n      //  console.log(res)\n      //  console.log('отработал useEffect рендера списка сохраненных фильмов')\n      setFavoriteList(res);\n      localStorage.setItem('savedMovies', JSON.stringify(res));\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }, []); //console.log(favoriteList)\n  // сохранение фильма\n\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\"); //   console.log(movie)\n    // setFavoriteList([...favoriteList, movie]);\n\n    mainApi.savedMovies({\n      jwt,\n      movie\n    }).then(res => {\n      console.log(res);\n      console.log(favoriteList);\n      setFavoriteList([...favoriteList, res]);\n      let favoriteMoviesList = JSON.parse(localStorage.getItem('savedMovies'));\n      favoriteMoviesList = favoriteMoviesList.concat(res);\n      localStorage.setItem('savedMovies', JSON.stringify(favoriteMoviesList)); //  localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res.data]));\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление фильма\n\n\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    const id = movie.movieId || movie.id;\n\n    const movieId = movie._id || favoriteList.find(item => item.movieId === movie.id)._id;\n\n    mainApi.deleteMovies({\n      jwt,\n      movieId\n    }).then(res => {\n      console.log(res);\n\n      if (res) {\n        const arr = JSON.parse(localStorage.getItem('savedMovies')).filter(item => item.movieId !== id);\n        setFavoriteList(arr);\n        localStorage.setItem('savedMovies', JSON.stringify(arr));\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // изменение инорфмации о пользователе\n\n\n  function handleUpdateUser(_ref) {\n    let {\n      name,\n      email\n    } = _ref;\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({\n      jwt,\n      name,\n      email\n    }).then(user => {\n      setTitle(\"Данные успешно изменены!\");\n      setImage(register);\n\n      if (user._id) {\n        setCurrentUser(user);\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n    }).finally(handleInfoTooLtip);\n  }\n\n  const routes = useLocation(); // проверка токенов авторизованных пользователей, вернувшихся в приложение\n\n  useEffect(() => {\n    console.log('useEffect в App отработал');\n    const jwt = localStorage.getItem(\"jwt\");\n    setIsLoggedIn(true);\n    mainApi.getUserInfo(jwt).then(profile => {\n      console.log(profile);\n      setCurrentUser(profile);\n      localStorage.setItem('currentUser', JSON.stringify(profile));\n      navigate(routes.pathname);\n    }).catch(err => {\n      navigate('/signin');\n      console.log(`Внимание! ${err}`);\n    });\n  }, []); // регистрация\n\n  function onRegister(_ref2) {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    mainApi.register({\n      email,\n      password,\n      name\n    }).then(data => {\n      onLogin({\n        email,\n        password\n      });\n      navigate('/movies');\n      setTitle(\"Вы успешно зарегистрировались!\");\n      setImage(register);\n      setIsLoggedIn(true);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      setRegisterError('Что-то пошло не так, попробуйте еще раз!');\n    }).finally(handleInfoTooLtip);\n  } // авторизация\n\n\n  function onLogin(_ref3) {\n    let {\n      email,\n      password\n    } = _ref3;\n    mainApi.login({\n      email,\n      password\n    }).then(res => {\n      navigate('/movies');\n      setData();\n      localStorage.setItem(\"jwt\", res.token);\n      localStorage.setItem('currentUser', JSON.stringify(res)); // console.log(res.token);\n\n      localStorage.setItem('isLoggedIn', true);\n      setIsLoggedIn(true);\n      return res;\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setLoginError('Что-то пошло не так, попробуйте еще раз!');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      handleInfoTooLtip();\n    });\n  }\n\n  function setData() {\n    const jwt = localStorage.getItem(\"jwt\");\n    const profileInfo = mainApi.getUserInfo(jwt);\n    const movies = moviesApi.getInitialCards();\n    const favoriteMovies = mainApi.getMovies(jwt);\n    Promise.all([profileInfo, movies, favoriteMovies]).then(res => {\n      setCurrentUser(res);\n      setMoviesList(res);\n      setFavoriteList(res[2].data);\n      localStorage.setItem('currentUser', JSON.stringify(res));\n      localStorage.setItem('movies', JSON.stringify(res));\n      localStorage.setItem('savedMovies', JSON.stringify(res[2].data));\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }\n\n  ; // удаление токена при выходе\n\n  function signOut() {\n    localStorage.clear();\n    navigate(\"/\"); //setFavoriteList([]);\n    //  setMoviesList([]);\n\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              isLoggedIn: isLoggedIn,\n              component: Movies,\n              onHeaderOpen: onHeaderOpen,\n              handleSaveMovies: handleSaveMovies,\n              handleDeleteMovies: handleDeleteMovies,\n              favoriteList: favoriteList,\n              moviesList: moviesList,\n              setMoviesList: setMoviesList,\n              moviesCount: moviesCount,\n              setMoviesCount: setMoviesCount,\n              addMovies: addMovies,\n              setAddMovies: setAddMovies,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/saved-movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              component: SavedMovies,\n              isLoggedIn: isLoggedIn,\n              onHeaderOpen: onHeaderOpen,\n              favoriteList: favoriteList,\n              setFavoriteList: setFavoriteList,\n              handleDeleteMovies: handleDeleteMovies,\n              handleSaveMovies: handleSaveMovies,\n              moviesList: moviesList,\n              setMoviesList: setMoviesList,\n              moviesCount: moviesCount,\n              setMoviesCount: setMoviesCount,\n              addMovies: addMovies,\n              setAddMovies: setAddMovies,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              component: Profile,\n              isLoggedIn: isLoggedIn,\n              signOut: signOut,\n              onUpdateUser: handleUpdateUser,\n              changeError: changeError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: onLogin,\n            loginError: loginError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: onRegister,\n            registerError: registerError,\n            setRegisterError: setRegisterError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderPopup, {\n        isOpen: isPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n        image: image,\n        title: title,\n        onClose: closeAllPopups,\n        isOpen: isInfoTooLtip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fsLXInYaPIzHUFZxpYJPu+eK7VE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js"],"names":["React","useEffect","Routes","Route","Navigate","useNavigate","useLocation","Movies","HeaderPopup","SavedMovies","NotFound","Profile","Login","Register","Main","CurrentUserContext","mainApi","moviesApi","notRegister","register","InfoTooLtip","Header","Navigation","SigninButton","ScreenSize","ProtectedRoute","App","currentUser","setCurrentUser","useState","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","isUserCheck","setIsUserCheck","registerError","setRegisterError","loginError","setLoginError","changeError","setChangeError","image","setImage","title","setTitle","isInfoTooLtip","setIsInfoTooLtip","favoriteList","setFavoriteList","moviesList","setMoviesList","moviesCount","setMoviesCount","addMovies","setAddMovies","navigate","width","isLoading","setIsLoading","onHeaderOpen","closeAllPopups","handleInfoTooLtip","getCards","jwt","localStorage","getItem","getInitialCards","then","movies","sessionStorage","setItem","JSON","stringify","catch","err","console","log","getMovies","res","handleSaveMovies","movie","savedMovies","favoriteMoviesList","parse","concat","handleDeleteMovies","id","movieId","_id","find","item","deleteMovies","arr","filter","handleUpdateUser","name","email","updateUser","user","finally","routes","getUserInfo","profile","pathname","onRegister","password","data","onLogin","login","setData","token","profileInfo","favoriteMovies","Promise","all","signOut","clear"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\n\nfunction App() {\n\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стэйт переменная открыти попапа\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n\n  // стэйт переменные регистрации и авторизации\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [isUserCheck, setIsUserCheck] = React.useState(false);\n\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\");\n\n  // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false);\n\n  // переменная состояния для сохраненных фильмов в избранном\n  const [favoriteList, setFavoriteList] = React.useState([]);\n\n  const [moviesList, setMoviesList] = React.useState([]);\n  // переменные состояния для добавления фильмов\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n\n  const navigate = useNavigate();\n\n  // ширина\n  const width = ScreenSize();\n\n  // отображение прейлодера\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  // открытие попапов\n  function onHeaderOpen() {\n    setIsPopupOpen(true)\n  }\n\n  // закрытие попапов\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  }\n  // для результата авторизации и регистрации и изменения пользователя\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n\n  // добавление карточек в зависимости от ширины экрана\n  useEffect(() => {\n    function getCards() {\n      if (width >= 1280) {\n        setMoviesCount(12);\n        setAddMovies(3);\n      } else if (width < 1279 && width >= 767) {\n        setMoviesCount(8);\n        setAddMovies(2);\n      } else if (width <= 766) {\n        setMoviesCount(5);\n        setAddMovies(1);\n      }\n    }\n    getCards()\n  }, [width])\n\n // рендер коллекции карточек\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    setIsLoading(true);\n    // рендер первоначальной коллекции фильмов\n    moviesApi.getInitialCards()\n      .then((movies) => {\n        setMoviesList(movies);\n        sessionStorage.setItem('movies', JSON.stringify(movies));\n        setIsLoading(false);\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n      });\n\n    // рендер сохраненных фильмов\n    mainApi.getMovies(jwt).then((res) => {\n    //  console.log(res)\n    //  console.log('отработал useEffect рендера списка сохраненных фильмов')\n      setFavoriteList(res);\n      localStorage.setItem('savedMovies', JSON.stringify(res));\n      setIsLoading(false);\n    })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      });\n\n  }, [])\n  \n\n\n\n  //console.log(favoriteList)\n\n\n  // сохранение фильма\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    //   console.log(movie)\n   // setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({ jwt, movie })\n      .then((res) => {\n        console.log(res)\n        console.log(favoriteList)\n        setFavoriteList([...favoriteList, res]);\n        let favoriteMoviesList = JSON.parse(localStorage.getItem('savedMovies'));\n        favoriteMoviesList = favoriteMoviesList.concat(res);\n        localStorage.setItem('savedMovies', JSON.stringify(favoriteMoviesList))\n      //  localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res.data]));\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // удаление фильма\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    const id = movie.movieId || movie.id;\n    const movieId =\n      movie._id || favoriteList.find((item) => item.movieId === movie.id)._id;\n    mainApi.deleteMovies({ jwt, movieId }).\n      then((res) => {\n        console.log(res);\n        if (res) {\n          const arr = JSON.parse(localStorage.getItem('savedMovies')).filter((item) => item.movieId !== id);\n          setFavoriteList(arr);\n          localStorage.setItem('savedMovies', JSON.stringify(arr));\n        }\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n\n\n  // изменение инорфмации о пользователе\n  function handleUpdateUser({ name, email }) {\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({ jwt, name, email })\n      .then((user) => {\n        setTitle(\"Данные успешно изменены!\");\n        setImage(register);\n        if (user._id) {\n          setCurrentUser(user);\n        }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n      }).finally(handleInfoTooLtip)\n  }\n\n\n  const routes = useLocation();\n  // проверка токенов авторизованных пользователей, вернувшихся в приложение\n  useEffect(() => {\n    console.log('useEffect в App отработал')\n    const jwt = localStorage.getItem(\"jwt\");\n    setIsLoggedIn(true);\n    mainApi.getUserInfo(jwt)\n      .then((profile) => {\n        console.log(profile)\n        setCurrentUser(profile);\n        localStorage.setItem('currentUser', JSON.stringify(profile))\n        navigate(routes.pathname);\n      })\n      .catch((err) => {\n        navigate('/signin');\n        console.log(`Внимание! ${err}`);\n      })\n  }, []);\n\n\n  // регистрация\n  function onRegister({ email, password, name }) {\n    mainApi.register({ email, password, name })\n      .then((data) => {\n        onLogin({ email, password });\n        navigate('/movies');\n        setTitle(\"Вы успешно зарегистрировались!\");\n        setImage(register);\n        setIsLoggedIn(true);\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n        setRegisterError('Что-то пошло не так, попробуйте еще раз!')\n      }).finally(handleInfoTooLtip)\n  }\n\n\n\n  // авторизация\n  function onLogin({ email, password }) {\n    mainApi.login({ email, password })\n      .then((res) => {\n        navigate('/movies');\n        setData();\n        localStorage.setItem(\"jwt\", res.token);\n        localStorage.setItem('currentUser', JSON.stringify(res));\n        // console.log(res.token);\n        localStorage.setItem('isLoggedIn', true)\n        setIsLoggedIn(true);\n        return res;\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setLoginError('Что-то пошло не так, попробуйте еще раз!');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        handleInfoTooLtip()\n      })\n  }\n\n  function setData() {\n    const jwt = localStorage.getItem(\"jwt\");\n    const profileInfo = mainApi.getUserInfo(jwt);\n    const movies = moviesApi.getInitialCards();\n    const favoriteMovies = mainApi.getMovies(jwt);\n    Promise.all([profileInfo, movies, favoriteMovies])\n      .then((res) => {\n        setCurrentUser(res);\n        setMoviesList(res);\n        setFavoriteList(res[2].data);\n\n        localStorage.setItem('currentUser', JSON.stringify(res));\n        localStorage.setItem('movies', JSON.stringify(res));\n        localStorage.setItem('savedMovies', JSON.stringify(res[2].data));\n\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  };\n\n\n\n  // удаление токена при выходе\n  function signOut() {\n    localStorage.clear();\n    navigate(\"/\");\n    //setFavoriteList([]);\n    //  setMoviesList([]);\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Routes>\n          <Route path='/movies' element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <ProtectedRoute\n                isLoggedIn={isLoggedIn}\n                component={Movies}\n                onHeaderOpen={onHeaderOpen}\n                handleSaveMovies={handleSaveMovies}\n                handleDeleteMovies={handleDeleteMovies}\n                favoriteList={favoriteList}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              ></ProtectedRoute>\n            </>\n          } ></Route>\n          <Route path=\"/\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <Main />\n            </>\n          } />\n          <Route path=\"/saved-movies\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <ProtectedRoute\n                component={SavedMovies}\n                isLoggedIn={isLoggedIn}\n                onHeaderOpen={onHeaderOpen}\n                favoriteList={favoriteList}\n                setFavoriteList={setFavoriteList}\n                handleDeleteMovies={handleDeleteMovies}\n                handleSaveMovies={handleSaveMovies}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              >\n              </ProtectedRoute>\n            </>\n          } />\n          <Route path=\"/profile\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <ProtectedRoute\n                component={Profile}\n                isLoggedIn={isLoggedIn}\n                signOut={signOut}\n                onUpdateUser={handleUpdateUser}\n                changeError={changeError}\n              >\n              </ProtectedRoute>\n            </>\n          } />\n          <Route path=\"/signin\"\n            element={<Login\n              onLogin={onLogin}\n              loginError={loginError}\n            ></Login>} />\n          <Route path=\"/signup\" element={\n            <Register\n              onRegister={onRegister}\n              registerError={registerError}\n              setRegisterError={setRegisterError}>\n            </Register>\n          } />\n          <Route path=\"*\" element={\n            <NotFound />\n          } />\n        </Routes>\n\n        <HeaderPopup isOpen={isPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <InfoTooLtip\n          image={image}\n          title={title}\n          onClose={closeAllPopups}\n          isOpen={isInfoTooLtip}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}