{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Footer from \"../Footer/Footer\";\nimport Header from \"../Header/Header\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies(_ref) {\n  _s();\n\n  let {\n    onHeaderOpen,\n    handleSaveMovies,\n    handleDeleteMovies,\n    moviesList,\n    setMoviesList,\n    favoriteList,\n    moviesCount,\n    setMoviesCount,\n    addMovies,\n    setAddMovies\n  } = _ref;\n  const routes = useLocation();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const valueData = localStorage.getItem('value');\n  const [value, setValue] = React.useState(valueData && routes.pathname === '/movies' ? valueData : '');\n  useEffect(() => {\n    const filterMovies = JSON.parse(localStorage.getItem('movies')).filter(movie => movie.nameRU.toLowerCase().indexOf(value.toLowerCase()) > -1);\n\n    if (filterMovies.length) {\n      setMoviesList(filterMovies);\n      localStorage.setItem('foundMovies', JSON.stringify(filterMovies));\n    } else {\n      setMoviesList([]);\n    }\n  }, [value]);\n\n  function handleSubmitSearchForm(value) {\n    setValue(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      setMoviesCount: setMoviesCount,\n      setMoviesList: setMoviesList,\n      handleSubmitSearchForm: handleSubmitSearchForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MoviesCardList, {\n      setMoviesCount: setMoviesCount,\n      moviesCount: moviesCount,\n      moviesList: moviesList //   filterMovies={filterMovies} \n      ,\n      handleSaveMovies: handleSaveMovies,\n      handleDeleteMovies: handleDeleteMovies,\n      favoriteList: favoriteList,\n      addMovies: addMovies,\n      setAddMovies: setAddMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"9W7fxaXBOtVREiXtad9OuE3fLMM=\", false, function () {\n  return [useLocation];\n});\n\n_c = Movies;\nexport default Movies;\n/*\n// Эффект обработки запроса от формы поиска\n    const filterMovies = moviesList.filter(movie => {\n        return movie.nameRU.toLowerCase().includes(value.toLowerCase())\n    })\n\n\n\n    useEffect(() => {\n        moviesApi.getInitialCards()\n            .then((movie) => {\n              //  console.log(movie)\n                setMoviesList(movie);\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    }, []);\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["React","useEffect","useState","moviesApi","MoviesCard","MoviesCardList","SearchForm","Footer","Header","Navigation","Preloader","useLocation","Movies","onHeaderOpen","handleSaveMovies","handleDeleteMovies","moviesList","setMoviesList","favoriteList","moviesCount","setMoviesCount","addMovies","setAddMovies","routes","isLoading","setIsLoading","valueData","localStorage","getItem","value","setValue","pathname","filterMovies","JSON","parse","filter","movie","nameRU","toLowerCase","indexOf","length","setItem","stringify","handleSubmitSearchForm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Footer from \"../Footer/Footer\";\nimport Header from \"../Header/Header\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { useLocation } from 'react-router';\n\nfunction Movies({ onHeaderOpen,\n    handleSaveMovies,\n    handleDeleteMovies,\n    moviesList,\n    setMoviesList,\n    favoriteList,\n    moviesCount,\n    setMoviesCount,\n    addMovies,\n    setAddMovies }) {\n    const routes = useLocation()\n\n    const [isLoading, setIsLoading] = React.useState(false)\n\n    const valueData = localStorage.getItem('value')\n    const [value, setValue] = React.useState(valueData && routes.pathname === '/movies' ? valueData : '')\n\n\n\n    useEffect(() => {\n            const filterMovies = JSON.parse(localStorage.getItem('movies')).filter((movie) =>\n                movie.nameRU.toLowerCase().indexOf(value.toLowerCase()) > -1)\n            if (filterMovies.length) {\n                setMoviesList(filterMovies)\n                localStorage.setItem('foundMovies', JSON.stringify(filterMovies))\n            } else {\n                setMoviesList([])\n            }\n    }, [value])\n\n\n\n    function handleSubmitSearchForm(value) {\n        setValue(value);\n    }\n\n\n    return (\n        <section className=\"movies\">\n            <SearchForm setMoviesCount={setMoviesCount}\n                setMoviesList={setMoviesList}\n                handleSubmitSearchForm={handleSubmitSearchForm}\n            >\n            </SearchForm>\n            <MoviesCardList\n                setMoviesCount={setMoviesCount}\n                moviesCount={moviesCount}\n                moviesList={moviesList}\n                //   filterMovies={filterMovies} \n                handleSaveMovies={handleSaveMovies}\n                handleDeleteMovies={handleDeleteMovies}\n                favoriteList={favoriteList}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n            />\n            <Footer></Footer>\n        </section>\n\n\n    );\n}\n\nexport default Movies;\n\n/*\n// Эффект обработки запроса от формы поиска\n    const filterMovies = moviesList.filter(movie => {\n        return movie.nameRU.toLowerCase().includes(value.toLowerCase())\n    })\n\n\n\n    useEffect(() => {\n        moviesApi.getInitialCards()\n            .then((movie) => {\n              //  console.log(movie)\n                setMoviesList(movie);\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    }, []);\n*/"]},"metadata":{},"sourceType":"module"}