{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Footer from \"../Footer/Footer\";\nimport Header from \"../Header/Header\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies(_ref) {\n  _s();\n\n  let {\n    onHeaderOpen,\n    handleSaveMovies,\n    handleDeleteMovies,\n    moviesList,\n    setMoviesList,\n    favoriteList,\n    moviesCount,\n    setMoviesCount,\n    addMovies,\n    setAddMovies\n  } = _ref;\n  const routes = useLocation();\n  const [value, setValue] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const queryData = localStorage.getItem('query');\n  const [queryString, setQueryString] = useState(queryData && routes.pathname === '/movies' ? queryData : ''); // Эффект обработки запроса от формы поиска\n\n  const filterMovies = moviesList.filter(movie => {\n    return movie.nameRU.toLowerCase().includes(value.toLowerCase());\n  });\n  useEffect(() => {\n    moviesApi.getInitialCards().then(movie => {\n      //  console.log(movie)\n      setMoviesList(movie);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }, []);\n\n  function handleSubmitSearchForm(query) {\n    console.log(queryData);\n    setQueryString(query);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      setMoviesCount: setMoviesCount,\n      value: value,\n      setValue: setValue,\n      setMoviesList: setMoviesList,\n      handleSubmitSearchForm: handleSubmitSearchForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MoviesCardList, {\n      setMoviesCount: setMoviesCount,\n      moviesCount: moviesCount,\n      moviesList: moviesList,\n      filterMovies: filterMovies,\n      handleSaveMovies: handleSaveMovies,\n      handleDeleteMovies: handleDeleteMovies,\n      favoriteList: favoriteList,\n      addMovies: addMovies,\n      setAddMovies: setAddMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"MIR3dBHmX2jBbJKehH7aZiM9ZPk=\", false, function () {\n  return [useLocation];\n});\n\n_c = Movies;\nexport default Movies;\n/*\nconst filterMovies = moviesList.filter(movie => {\n        return movie.nameRU.toLowerCase().includes(value.toLowerCase())\n    })\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["React","useEffect","useState","moviesApi","MoviesCard","MoviesCardList","SearchForm","Footer","Header","Navigation","Preloader","useLocation","Movies","onHeaderOpen","handleSaveMovies","handleDeleteMovies","moviesList","setMoviesList","favoriteList","moviesCount","setMoviesCount","addMovies","setAddMovies","routes","value","setValue","isLoading","setIsLoading","queryData","localStorage","getItem","queryString","setQueryString","pathname","filterMovies","filter","movie","nameRU","toLowerCase","includes","getInitialCards","then","catch","err","console","log","handleSubmitSearchForm","query"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Footer from \"../Footer/Footer\";\nimport Header from \"../Header/Header\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { useLocation } from 'react-router';\n\nfunction Movies({onHeaderOpen, \n    handleSaveMovies, \n    handleDeleteMovies, \n    moviesList, \n    setMoviesList, \n    favoriteList,\n    moviesCount, \n    setMoviesCount,\n    addMovies, \n    setAddMovies  }) {\n        const routes  = useLocation()\n\n    const [value, setValue] = React.useState('');\n    const [isLoading, setIsLoading] = React.useState(false)\n\n    const queryData = localStorage.getItem('query');\n    const [queryString, setQueryString] = useState(queryData && routes.pathname === '/movies' ? queryData : '');\n\n\n    // Эффект обработки запроса от формы поиска\n    const filterMovies = moviesList.filter(movie => {\n        return movie.nameRU.toLowerCase().includes(value.toLowerCase())\n    })\n\n\n\n    useEffect(() => {\n        moviesApi.getInitialCards()\n            .then((movie) => {\n              //  console.log(movie)\n                setMoviesList(movie);\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    }, []);\n\n\n    function handleSubmitSearchForm (query) {\n        console.log(queryData)\n        setQueryString(query)\n    }\n\n\n    return (\n        <section className=\"movies\">\n            <SearchForm setMoviesCount={setMoviesCount} \n                        value={value} \n                        setValue={setValue} \n                        setMoviesList={setMoviesList}\n                        handleSubmitSearchForm={handleSubmitSearchForm}\n                        >\n            </SearchForm>\n            <MoviesCardList  \n            setMoviesCount={setMoviesCount} \n            moviesCount={moviesCount} \n            moviesList={moviesList} \n            filterMovies={filterMovies} \n            handleSaveMovies={handleSaveMovies} \n            handleDeleteMovies={handleDeleteMovies} \n            favoriteList={favoriteList}\n            addMovies={addMovies}\n            setAddMovies={setAddMovies}\n            />\n            <Footer></Footer>\n        </section>\n\n\n    );\n}\n\nexport default Movies;\n\n/*\nconst filterMovies = moviesList.filter(movie => {\n        return movie.nameRU.toLowerCase().includes(value.toLowerCase())\n    })\n*/"]},"metadata":{},"sourceType":"module"}