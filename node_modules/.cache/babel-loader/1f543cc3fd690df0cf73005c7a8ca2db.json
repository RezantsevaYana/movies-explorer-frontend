{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({}); // стэйт переменная открыти попапа\n\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false); // стэйт переменные регистрации и авторизации\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\"); // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false); // переменные состояния, отвечающие за отображение маил в хэдэр\n\n  const [email, setMail] = React.useState(\"\"); // переменная состояния для сохраненных фильмов в избранном\n\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]);\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n  const navigate = useNavigate();\n  const jwt = localStorage.getItem(\"jwt\"); // открытие попапа\n\n  function onHeaderOpen() {\n    setIsPopupOpen(true);\n  } // закрытие попапа\n\n\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  } // для результата авторизации и регистрации - пока не реализовано\n\n\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n  /*\n    // рендер карточек\n    useEffect(() => {\n      // рендер изначальной коллекции карточек\n    //  const movies = JSON.parse(localStorage.getItem('movies'));\n        moviesApi.getInitialCards()\n          .then((data) => {\n            localStorage.setItem('movies', JSON.stringify(data));\n          })\n          .catch((err) => console.log(err));\n      /*\n      // рендер сохраненных карточек\n   //   const savedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n    //  if (!savedMovies && isLoggedIn) {\n        mainApi.getSavedMovies(jwt)\n          .then((data) => {\n            console.log(favoriteList)\n            setFavoriteList(data);\n            localStorage.setItem('savedMovies', JSON.stringify(data));\n          })\n          .catch((err) => console.log(err));\n          /*\n      } else {\n        setFavoriteList(savedMovies);\n      }\n    \n    }, []); \n    */\n  //  console.log(favoriteList)\n\n\n  console.log(moviesList); // сохранение фильма\n\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log(movie);\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({\n      jwt,\n      movie\n    }).then(res => {\n      console.log(res);\n      console.log(favoriteList);\n      setFavoriteList([...favoriteList, res]);\n      localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление фильма\n\n\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\"); //  console.log(movie)\n\n    const id = movie.movieId || movie.id;\n\n    const movieId = movie._id || favoriteList.find(item => item.movieId === movie.id)._id; //  console.log(id)\n\n\n    mainApi.deleteMovies({\n      jwt,\n      movieId\n    }).then(res => {\n      console.log(res);\n\n      if (res) {\n        const arr = favoriteList.filter(item => item.movieId !== id);\n        setFavoriteList(arr);\n        localStorage.setItem('savedMovies', JSON.stringify(arr));\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // изменение инорфмации о пользователе\n\n\n  function handleUpdateUser(_ref) {\n    let {\n      name,\n      email\n    } = _ref;\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({\n      jwt,\n      name,\n      email\n    }).then(user => {\n      if (user._id) {\n        setCurrentUser(user);\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // проверка токенов авторизованных пользователей, вернувшихся в приложение\n\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) // проверяем токен\n      mainApi.checkToken(jwt).then(res => {\n        // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n        if (res) {\n          setCurrentUser(res);\n          setIsLoggedIn(true); // navigate(\"/\");\n        } else {\n          setCurrentUser({});\n        }\n      }).catch(err => {\n        console.log(`Внимание! ${err}`);\n        navigate(\"/signin\");\n      });\n  }, [navigate]); // регистрация\n\n  function onRegister(_ref2) {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    mainApi.register({\n      email,\n      password,\n      name\n    }).then(data => {\n      if (data.id) {\n        navigate('/signin');\n        onLogin({\n          email,\n          password\n        });\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n    });\n  } // авторизация\n\n\n  function onLogin(_ref3) {\n    let {\n      email,\n      password\n    } = _ref3;\n    mainApi.login({\n      email,\n      password\n    }).then(res => {\n      if (res.token) {\n        localStorage.setItem(\"jwt\", res.token); //  console.log(res.token);\n\n        setIsLoggedIn(true); //   setDataUser();\n        //setDataMovies()\n\n        navigate('/movies');\n        return res;\n      } else {\n        return;\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setLoginError('Что-то пошло не так, попробуйте еще раз!');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n    });\n  }\n\n  function setDataUser() {\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.getUserInfo(jwt).then(userInfo => {\n      setCurrentUser(userInfo);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }\n\n  function setDataMovies() {\n    const jwt = localStorage.getItem(\"jwt\");\n    moviesApi.getSavedMovies().then(movies => {\n      setFavoriteList(movies);\n      localStorage.setItem('savedMovies', JSON.stringify(movies));\n\n      if (!localStorage.movies) {\n        moviesApi.getInitialCards().then(movies => {\n          localStorage.setItem('movies', JSON.stringify(movies));\n        }).catch(err => {\n          console.log(`Внимание! ${err}`);\n        });\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление токена при выходе\n\n\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem('savedMovies');\n    navigate(\"/signin\"); //  setFavoriteList([]);\n    //  setMoviesList([]);\n    //  setCurrentUser([]);\n\n    setIsLoggedIn(false);\n  }\n\n  return (\n    /*#__PURE__*/\n    // подключаем дерево компоненнтов к провайдеру контекста\n    _jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movies\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Movies, {\n                onHeaderOpen: onHeaderOpen,\n                handleSaveMovies: handleSaveMovies,\n                handleDeleteMovies: handleDeleteMovies,\n                favoriteList: favoriteList,\n                moviesList: moviesList,\n                setMoviesList: setMoviesList,\n                moviesCount: moviesCount,\n                setMoviesCount: setMoviesCount,\n                addMovies: addMovies,\n                setAddMovies: setAddMovies\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/saved-movies\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(SavedMovies, {\n                onHeaderOpen: onHeaderOpen,\n                favoriteList: favoriteList,\n                setFavoriteList: setFavoriteList,\n                handleDeleteMovies: handleDeleteMovies,\n                moviesList: moviesList,\n                setMoviesList: setMoviesList,\n                moviesCount: moviesCount,\n                setMoviesCount: setMoviesCount,\n                addMovies: addMovies,\n                setAddMovies: setAddMovies\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Profile, {\n                signOut: signOut,\n                onUpdateUser: handleUpdateUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: onLogin,\n              loginError: loginError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: onRegister,\n              registerError: registerError,\n              setRegisterError: setRegisterError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(HeaderPopup, {\n          isOpen: isPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n          image: image,\n          title: title,\n          onClose: closeAllPopups,\n          isOpen: isInfoTooLtip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"C56i5S2+DtNcq9THrtxAMEmSB20=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App; // 4af5d9700806dbf78300b91a721f37fc0cef9a5f11da0a8f46ad1bc9b95e6c7e\n\n/*\nNODE_ENV=production\nJWT_SECRET=4af5d9700806dbf78300b91a721f37fc0cef9a5f11da0a8f46ad1bc9b95e6c7e\n*/\n\n/*\n\n*/\n// добавить вариант с выводом на экран \"ничего не найдено\"\n// сделать так, чтобы результат поиска при последующих поисках не осуществлялся\n// при вовзращении на страничку с фильмами должна оставаться активной кнопка, а при нажатии на нее сохраненение должно удалялться\n// при повтороной авторизаци на странице поиска фильмов, фильма рендерятся без поиска, а сразу - должна быть пустая страница\n// проблемы с добавлением в фэйворилист и последующей его обработкой. если изначально он пустой, то все последующие действия с ним ломаются\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js"],"names":["React","useEffect","Routes","Route","Navigate","useNavigate","Movies","HeaderPopup","SavedMovies","NotFound","Profile","Login","Register","Main","Footer","CurrentUserContext","mainApi","moviesApi","notRegister","register","InfoTooLtip","ProtectedRoute","react","Header","Navigation","SigninButton","App","currentUser","setCurrentUser","useState","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","registerError","setRegisterError","loginError","setLoginError","image","setImage","title","setTitle","isInfoTooLtip","setIsInfoTooLtip","email","setMail","favoriteList","setFavoriteList","moviesList","setMoviesList","moviesCount","setMoviesCount","addMovies","setAddMovies","navigate","jwt","localStorage","getItem","onHeaderOpen","closeAllPopups","handleInfoTooLtip","console","log","handleSaveMovies","movie","savedMovies","then","res","setItem","JSON","stringify","catch","err","handleDeleteMovies","id","movieId","_id","find","item","deleteMovies","arr","filter","handleUpdateUser","name","updateUser","user","checkToken","onRegister","password","data","onLogin","login","token","setDataUser","getUserInfo","userInfo","setDataMovies","getSavedMovies","movies","getInitialCards","signOut","removeItem"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\n\n\nfunction App() {\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стэйт переменная открыти попапа\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n  // стэйт переменные регистрации и авторизации\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n\n  // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false);\n\n  // переменные состояния, отвечающие за отображение маил в хэдэр\n\n  const [email, setMail] = React.useState(\"\");\n\n  // переменная состояния для сохраненных фильмов в избранном\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]);\n\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n\n  const navigate = useNavigate();\n  const jwt = localStorage.getItem(\"jwt\");\n\n  // открытие попапа\n  function onHeaderOpen() {\n    setIsPopupOpen(true)\n  }\n  // закрытие попапа\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  }\n  // для результата авторизации и регистрации - пока не реализовано\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n/*\n  // рендер карточек\n  useEffect(() => {\n    // рендер изначальной коллекции карточек\n  //  const movies = JSON.parse(localStorage.getItem('movies'));\n      moviesApi.getInitialCards()\n        .then((data) => {\n          localStorage.setItem('movies', JSON.stringify(data));\n        })\n        .catch((err) => console.log(err));\n    /*\n    // рендер сохраненных карточек\n //   const savedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n  //  if (!savedMovies && isLoggedIn) {\n      mainApi.getSavedMovies(jwt)\n        .then((data) => {\n          console.log(favoriteList)\n          setFavoriteList(data);\n          localStorage.setItem('savedMovies', JSON.stringify(data));\n        })\n        .catch((err) => console.log(err));\n        /*\n    } else {\n      setFavoriteList(savedMovies);\n    }\n  \n  }, []); \n  */\n  \n \n\n//  console.log(favoriteList)\n  console.log(moviesList)\n\n  // сохранение фильма\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log(movie)\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({ jwt, movie })\n      .then((res) => {\n        console.log(res);\n        console.log(favoriteList)\n        setFavoriteList([...favoriteList, res]);\n        localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // удаление фильма\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    //  console.log(movie)\n    const id = movie.movieId || movie.id;\n    const movieId =\n      movie._id || favoriteList.find((item) => item.movieId === movie.id)._id;\n    //  console.log(id)\n    mainApi.deleteMovies({ jwt, movieId }).\n      then((res) => {\n        console.log(res);\n        if (res) {\n          const arr = favoriteList.filter((item) => item.movieId !== id);\n          setFavoriteList(arr);\n          localStorage.setItem('savedMovies', JSON.stringify(arr));\n        }\n\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // изменение инорфмации о пользователе\n  function handleUpdateUser({ name, email }) {\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({ jwt, name, email })\n      .then((user) => {\n        if (user._id) {\n          setCurrentUser(user);\n        }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n      });\n  }\n\n  // проверка токенов авторизованных пользователей, вернувшихся в приложение\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt)\n      // проверяем токен\n      mainApi\n        .checkToken(jwt)\n        .then((res) => {\n          // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n          if (res) {\n            setCurrentUser(res)\n            setIsLoggedIn(true);\n           // navigate(\"/\");\n          } else {\n            setCurrentUser({})\n          }\n        })\n        .catch((err) => {\n          console.log(`Внимание! ${err}`);\n          navigate(\"/signin\");\n        });\n  }, [navigate]);\n\n  // регистрация\n  function onRegister({ email, password, name }) {\n    mainApi.register({ email, password, name })\n      .then((data) => {\n        if (data.id) {\n          navigate('/signin');\n          onLogin({ email, password });\n        }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      })\n  }\n  // авторизация\n  function onLogin({ email, password }) {\n    mainApi.login({ email, password })\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem(\"jwt\", res.token);\n          //  console.log(res.token);\n          setIsLoggedIn(true);\n       //   setDataUser();\n          //setDataMovies()\n          navigate('/movies');\n          return res;\n        } else {\n          return\n        }\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setLoginError('Что-то пошло не так, попробуйте еще раз!');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      })\n  }\n\n  function setDataUser() {\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.getUserInfo(jwt)\n      .then((userInfo) => {\n        setCurrentUser(userInfo);\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  function setDataMovies() {\n    const jwt = localStorage.getItem(\"jwt\");\n    moviesApi.getSavedMovies()\n      .then((movies) => {\n        setFavoriteList(movies);\n        localStorage.setItem('savedMovies', JSON.stringify(movies));\n        if (!localStorage.movies) {\n          moviesApi.getInitialCards()\n            .then((movies) => {\n              localStorage.setItem('movies', JSON.stringify(movies));\n            })\n            .catch((err) => {\n              console.log(`Внимание! ${err}`);\n            });\n        }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // удаление токена при выходе\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem('savedMovies');\n    navigate(\"/signin\");\n  //  setFavoriteList([]);\n  //  setMoviesList([]);\n  //  setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n\n  return (\n    // подключаем дерево компоненнтов к провайдеру контекста\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Routes>\n          <Route path='/movies' element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <Movies onHeaderOpen={onHeaderOpen}\n                handleSaveMovies={handleSaveMovies}\n                handleDeleteMovies={handleDeleteMovies}\n                favoriteList={favoriteList}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n              />\n            </>\n          } />\n          <Route path=\"/\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <Main />\n            </>\n          } />\n          <Route path=\"/saved-movies\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <SavedMovies\n                onHeaderOpen={onHeaderOpen}\n                favoriteList={favoriteList}\n                setFavoriteList={setFavoriteList}\n                handleDeleteMovies={handleDeleteMovies}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n              />\n            </>\n          } />\n          <Route path=\"/profile\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <Profile signOut={signOut} onUpdateUser={handleUpdateUser} />\n            </>\n          } />\n          <Route path=\"/signin\" element={\n            <Login onLogin={onLogin} loginError={loginError} />\n          } />\n          <Route path=\"/signup\" element={\n            <Register onRegister={onRegister} registerError={registerError} setRegisterError={setRegisterError} />\n          } />\n          <Route path=\"*\" element={\n            <NotFound />\n          } />\n        </Routes>\n\n        <HeaderPopup isOpen={isPopupOpen} onClose={closeAllPopups} />\n        <InfoTooLtip\n          image={image}\n          title={title}\n          onClose={closeAllPopups}\n          isOpen={isInfoTooLtip}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n\n// 4af5d9700806dbf78300b91a721f37fc0cef9a5f11da0a8f46ad1bc9b95e6c7e\n/*\nNODE_ENV=production\nJWT_SECRET=4af5d9700806dbf78300b91a721f37fc0cef9a5f11da0a8f46ad1bc9b95e6c7e\n*/\n\n/*\n\n*/\n// добавить вариант с выводом на экран \"ничего не найдено\"\n// сделать так, чтобы результат поиска при последующих поисках не осуществлялся\n// при вовзращении на страничку с фильмами должна оставаться активной кнопка, а при нажатии на нее сохраненение должно удалялться\n// при повтороной авторизаци на странице поиска фильмов, фильма рендерятся без поиска, а сразу - должна быть пустая страница\n\n\n// проблемы с добавлением в фэйворилист и последующей его обработкой. если изначально он пустой, то все последующие действия с ним ломаются\n\n\n"]},"metadata":{},"sourceType":"module"}