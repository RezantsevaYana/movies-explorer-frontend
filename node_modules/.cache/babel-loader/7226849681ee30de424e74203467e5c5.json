{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({}); // стэйт переменная открыти попапа\n\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false); // стэйт переменные регистрации и авторизации\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\"); // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false); // переменная состояния для сохраненных фильмов в избранном\n\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]); // переменные состояния для добавления фильмов\n\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n  const navigate = useNavigate(); // ширина\n\n  const width = ScreenSize(); // отображение прейлодера\n\n  const [isLoading, setIsLoading] = React.useState(false); // открытие попапов\n\n  function onHeaderOpen() {\n    setIsPopupOpen(true);\n  } // закрытие попапов\n\n\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  } // для результата авторизации и регистрации и изменения пользователя\n\n\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n\n  useEffect(() => {\n    function getCards() {\n      if (width >= 1280) {\n        setMoviesCount(12);\n        setAddMovies(3);\n      } else if (width < 1279 && width >= 767) {\n        setMoviesCount(8);\n        setAddMovies(2);\n      } else if (width <= 766) {\n        setMoviesCount(5);\n        setAddMovies(1);\n      }\n    }\n\n    getCards();\n  }, [width]); // загрузка первоначальной коллекции карточек и информации о пользователе\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    setIsLoading(true);\n    Promise.all([moviesApi.getInitialCards(), mainApi.getMovies(jwt)]).then(_ref => {\n      let [movies, res] = _ref;\n      setIsLoading(false);\n      setMoviesList(movies);\n      sessionStorage.setItem('movies', JSON.stringify(movies));\n      setFavoriteList(res);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }, []);\n  console.log(favoriteList); // сохранение фильма\n\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\"); //   console.log(movie)\n\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({\n      jwt,\n      movie\n    }).then(res => {\n      setFavoriteList([...favoriteList, res]);\n      localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление фильма\n\n\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    const id = movie.movieId || movie.id;\n\n    const movieId = movie._id || favoriteList.find(item => item.movieId === movie.id)._id;\n\n    mainApi.deleteMovies({\n      jwt,\n      movieId\n    }).then(res => {\n      console.log(res);\n\n      if (res) {\n        const arr = JSON.parse(localStorage.getItem('savedMovies')).filter(item => item.movieId !== id);\n        setFavoriteList(arr);\n        localStorage.setItem('savedMovies', JSON.stringify(arr));\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // изменение инорфмации о пользователе\n\n\n  function handleUpdateUser(_ref2) {\n    let {\n      name,\n      email\n    } = _ref2;\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({\n      jwt,\n      name,\n      email\n    }).then(user => {\n      setTitle(\"Данные успешно изменены!\");\n      setImage(register);\n\n      if (user._id) {\n        setCurrentUser(user);\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n    }).finally(handleInfoTooLtip);\n  } // проверка токенов авторизованных пользователей, вернувшихся в приложение\n\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) // проверяем токен\n      mainApi.checkToken(jwt).then(res => {\n        if (res) {\n          setCurrentUser(res);\n          setIsLoggedIn(true);\n        } else {\n          setCurrentUser({});\n        }\n      }).catch(err => {\n        console.log(`Внимание! ${err}`);\n      });\n  }, [navigate]); // регистрация\n\n  function onRegister(_ref3) {\n    let {\n      email,\n      password,\n      name\n    } = _ref3;\n    mainApi.register({\n      email,\n      password,\n      name\n    }).then(data => {\n      onLogin({\n        email,\n        password\n      });\n      navigate('/movies');\n      setTitle(\"Вы успешно зарегистрировались!\");\n      setImage(register);\n      setIsLoggedIn(true);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n    }).finally(handleInfoTooLtip);\n  } // авторизация\n\n\n  function onLogin(_ref4) {\n    let {\n      email,\n      password\n    } = _ref4;\n    mainApi.login({\n      email,\n      password\n    }).then(res => {\n      navigate('/movies');\n      localStorage.setItem(\"jwt\", res.token);\n      localStorage.setItem('currentUser', JSON.stringify(res)); // console.log(res.token);\n\n      setIsLoggedIn(true); //     setDataMovies();\n\n      return res;\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setLoginError('Что-то пошло не так, попробуйте еще раз!');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      handleInfoTooLtip();\n    });\n  } // удаление токена при выходе\n\n\n  function signOut() {\n    localStorage.clear();\n    navigate(\"/\");\n    setFavoriteList([]); //  setMoviesList([]);\n\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              isLoggedIn: isLoggedIn,\n              component: Movies,\n              onHeaderOpen: onHeaderOpen,\n              handleSaveMovies: handleSaveMovies,\n              handleDeleteMovies: handleDeleteMovies,\n              favoriteList: favoriteList,\n              moviesList: moviesList,\n              setMoviesList: setMoviesList,\n              moviesCount: moviesCount,\n              setMoviesCount: setMoviesCount,\n              addMovies: addMovies,\n              setAddMovies: setAddMovies,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/saved-movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              component: SavedMovies,\n              isLoggedIn: isLoggedIn,\n              onHeaderOpen: onHeaderOpen,\n              favoriteList: favoriteList,\n              setFavoriteList: setFavoriteList,\n              handleDeleteMovies: handleDeleteMovies,\n              handleSaveMovies: handleSaveMovies,\n              moviesList: moviesList,\n              setMoviesList: setMoviesList,\n              moviesCount: moviesCount,\n              setMoviesCount: setMoviesCount,\n              addMovies: addMovies,\n              setAddMovies: setAddMovies,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                onHeaderOpen: onHeaderOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              component: Profile,\n              isLoggedIn: isLoggedIn,\n              signOut: signOut,\n              onUpdateUser: handleUpdateUser,\n              changeError: changeError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Login,\n            isLoggedIn: !isLoggedIn,\n            onLogin: onLogin,\n            loginError: loginError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Register,\n            isLoggedIn: !isLoggedIn,\n            onRegister: onRegister,\n            registerError: registerError,\n            setRegisterError: setRegisterError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: isLoggedIn ? \"/\" : \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderPopup, {\n        isOpen: isPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n        image: image,\n        title: title,\n        onClose: closeAllPopups,\n        isOpen: isInfoTooLtip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OoIlXg04jZOyEjJ4rIATm2fbbDM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js"],"names":["React","useEffect","Routes","Route","Navigate","useNavigate","Movies","HeaderPopup","SavedMovies","NotFound","Profile","Login","Register","Main","CurrentUserContext","mainApi","moviesApi","notRegister","register","InfoTooLtip","Header","Navigation","SigninButton","ScreenSize","ProtectedRoute","App","currentUser","setCurrentUser","useState","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","registerError","setRegisterError","loginError","setLoginError","changeError","setChangeError","image","setImage","title","setTitle","isInfoTooLtip","setIsInfoTooLtip","favoriteList","setFavoriteList","moviesList","setMoviesList","moviesCount","setMoviesCount","addMovies","setAddMovies","navigate","width","isLoading","setIsLoading","onHeaderOpen","closeAllPopups","handleInfoTooLtip","getCards","jwt","localStorage","getItem","Promise","all","getInitialCards","getMovies","then","movies","res","sessionStorage","setItem","JSON","stringify","catch","err","console","log","handleSaveMovies","movie","savedMovies","handleDeleteMovies","id","movieId","_id","find","item","deleteMovies","arr","parse","filter","handleUpdateUser","name","email","updateUser","user","finally","checkToken","onRegister","password","data","onLogin","login","token","signOut","clear"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\n\nfunction App() {\n\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стэйт переменная открыти попапа\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n  // стэйт переменные регистрации и авторизации\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\");\n\n  // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false);\n\n  // переменная состояния для сохраненных фильмов в избранном\n  const [favoriteList, setFavoriteList] = React.useState([]);\n\n  const [moviesList, setMoviesList] = React.useState([]);\n  // переменные состояния для добавления фильмов\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n\n  const navigate = useNavigate();\n\n  // ширина\n  const width = ScreenSize();\n\n  // отображение прейлодера\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  // открытие попапов\n  function onHeaderOpen() {\n    setIsPopupOpen(true)\n  }\n\n  // закрытие попапов\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  }\n  // для результата авторизации и регистрации и изменения пользователя\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n\n\n  useEffect(() => {\n    function getCards() {\n      if (width >= 1280) {\n        setMoviesCount(12);\n        setAddMovies(3);\n      } else if (width < 1279 && width >= 767) {\n        setMoviesCount(8);\n        setAddMovies(2);\n      } else if (width <= 766) {\n        setMoviesCount(5);\n        setAddMovies(1);\n      }\n    }\n    getCards()\n  }, [width])\n\n\n\n\n\n  // загрузка первоначальной коллекции карточек и информации о пользователе\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    setIsLoading(true);\n    Promise.all([moviesApi.getInitialCards(), mainApi.getMovies(jwt)])\n      .then(([movies, res]) => {\n        setIsLoading(false);\n        setMoviesList(movies);\n        sessionStorage.setItem('movies', JSON.stringify(movies));\n              \n        \n        setFavoriteList(res);\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      });\n  }, []);\n\n  console.log(favoriteList)\n\n\n  // сохранение фильма\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    //   console.log(movie)\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({ jwt, movie })\n      .then((res) => {\n        setFavoriteList([...favoriteList, res]);\n        localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // удаление фильма\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    const id = movie.movieId || movie.id;\n    const movieId =\n      movie._id || favoriteList.find((item) => item.movieId === movie.id)._id;\n    mainApi.deleteMovies({ jwt, movieId }).\n      then((res) => {\n        console.log(res);\n        if (res) {\n          const arr = JSON.parse(localStorage.getItem('savedMovies')).filter((item) => item.movieId !== id);\n          setFavoriteList(arr);\n          localStorage.setItem('savedMovies', JSON.stringify(arr));\n        }\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n\n\n  // изменение инорфмации о пользователе\n  function handleUpdateUser({ name, email }) {\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({ jwt, name, email })\n      .then((user) => {\n        setTitle(\"Данные успешно изменены!\");\n        setImage(register);\n        if (user._id) {\n          setCurrentUser(user);\n        }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n      }).finally(handleInfoTooLtip)\n  }\n\n\n\n\n\n\n  // проверка токенов авторизованных пользователей, вернувшихся в приложение\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt)\n      // проверяем токен\n      mainApi\n        .checkToken(jwt)\n        .then((res) => {\n          if (res) {\n            setCurrentUser(res)\n            setIsLoggedIn(true);\n          } else {\n            setCurrentUser({})\n          }\n        })\n        .catch((err) => {\n          console.log(`Внимание! ${err}`);\n        });\n  }, [navigate]);\n\n\n\n  // регистрация\n  function onRegister({ email, password, name }) {\n    mainApi.register({ email, password, name })\n      .then((data) => {\n        onLogin({ email, password });\n        navigate('/movies');\n        setTitle(\"Вы успешно зарегистрировались!\");\n        setImage(register);\n        setIsLoggedIn(true);\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      }).finally(handleInfoTooLtip)\n  }\n\n\n\n  // авторизация\n  function onLogin({ email, password }) {\n    mainApi.login({ email, password })\n      .then((res) => {\n        navigate('/movies');\n        localStorage.setItem(\"jwt\", res.token);\n        localStorage.setItem('currentUser', JSON.stringify(res));\n        // console.log(res.token);\n        setIsLoggedIn(true);\n        //     setDataMovies();\n        return res;\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setLoginError('Что-то пошло не так, попробуйте еще раз!');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        handleInfoTooLtip()\n      })\n  }\n\n\n\n  // удаление токена при выходе\n  function signOut() {\n    localStorage.clear();\n    navigate(\"/\");\n    setFavoriteList([]);\n    //  setMoviesList([]);\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Routes>\n          <Route path='/movies' element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <ProtectedRoute\n                isLoggedIn={isLoggedIn}\n                component={Movies}\n                onHeaderOpen={onHeaderOpen}\n                handleSaveMovies={handleSaveMovies}\n                handleDeleteMovies={handleDeleteMovies}\n                favoriteList={favoriteList}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              ></ProtectedRoute>\n            </>\n          } ></Route>\n          <Route path=\"/\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <Main />\n            </>\n          } />\n          <Route path=\"/saved-movies\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <ProtectedRoute\n                component={SavedMovies}\n                isLoggedIn={isLoggedIn}\n                onHeaderOpen={onHeaderOpen}\n                favoriteList={favoriteList}\n                setFavoriteList={setFavoriteList}\n                handleDeleteMovies={handleDeleteMovies}\n                handleSaveMovies={handleSaveMovies}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              >\n              </ProtectedRoute>\n            </>\n          } />\n          <Route path=\"/profile\" element={\n            <>\n              <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n              </Header>\n              <ProtectedRoute\n                component={Profile}\n                isLoggedIn={isLoggedIn}\n                signOut={signOut}\n                onUpdateUser={handleUpdateUser}\n                changeError={changeError}\n              >\n              </ProtectedRoute>\n            </>\n          } />\n          <Route path=\"/signin\"\n            element={<ProtectedRoute\n              component={Login}\n              isLoggedIn={!isLoggedIn}\n              onLogin={onLogin}\n              loginError={loginError}\n            ></ProtectedRoute>} />\n          <Route path=\"/signup\" element={\n            <ProtectedRoute\n              component={Register}\n              isLoggedIn={!isLoggedIn}\n              onRegister={onRegister}\n              registerError={registerError}\n              setRegisterError={setRegisterError}>\n            </ProtectedRoute>\n          } />\n          <Route path=\"*\" element={\n            <NotFound />\n          } />\n        <Route element={<Navigate to={isLoggedIn ? \"/\" : \"/signin\"} />} />\n        </Routes>\n\n        <HeaderPopup isOpen={isPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <InfoTooLtip\n          image={image}\n          title={title}\n          onClose={closeAllPopups}\n          isOpen={isInfoTooLtip}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}