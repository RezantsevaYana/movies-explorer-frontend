{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext.js\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoviesCardList() {\n  _s();\n\n  const [cards, setCards] = React.useState();\n  React.useEffect(() => {\n    Promise.all(moviesApi.getInitialCards()).then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      console.log(cards);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies-list\",\n    children: cards.map(cards => {\n      return /*#__PURE__*/_jsxDEV(MoviesCard, {\n        film: cards\n      }, cards._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n}\n\n_s(MoviesCardList, \"jbk9bBkkvWK4BlqqPDLOYgAfpA4=\");\n\n_c = MoviesCardList;\nexport default MoviesCardList;\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"names":["React","useEffect","useState","CurrentUserContext","moviesApi","MoviesCard","Preloader","MoviesCardList","cards","setCards","Promise","all","getInitialCards","then","catch","err","console","log","map","_id"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,sCAAnC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAGA,SAASC,cAAT,GAA0B;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACE,QAAN,EAA1B;AAEAF,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClBS,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,CAACQ,eAAV,EAAZ,EACKC,IADL,CACWL,KAAD,IAAW;AACbC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAHL,EAIKM,KAJL,CAIYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYF,GAAI,EAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACH,KAPL;AAQH,GATD;AAaA,sBACQ;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,cACKA,KAAK,CAACU,GAAN,CAAWV,KAAD,IAAW;AAClB,0BAAQ,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA;AAAlB,SAA8BA,KAAK,CAACW,GAApC;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADR;AAQH;;GAxBQZ,c;;KAAAA,c;AA0BT,eAAeA,cAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext.js\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\n\n\nfunction MoviesCardList() {\n    const [cards, setCards] = React.useState();\n\n    React.useEffect(() => {\n        Promise.all(moviesApi.getInitialCards())\n            .then((cards) => {\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n                console.log(cards)\n            });\n    }, );\n\n\n\n    return (\n            <section className=\"movies-list\">\n                {cards.map((cards) => {\n                    return (<MoviesCard film={cards} key={cards._id} />)\n                }\n                )}\n            </section>\n    );\n}\n\nexport default MoviesCardList;\n\n\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n\n\n"]},"metadata":{},"sourceType":"module"}