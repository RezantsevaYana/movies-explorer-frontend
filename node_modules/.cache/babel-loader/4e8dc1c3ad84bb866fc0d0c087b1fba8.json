{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from 'react-router';\nimport React, { useEffect, useState } from \"react\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MoviesCardList(_ref) {\n  _s();\n\n  let {\n    moviesList,\n    setMoviesCount,\n    moviesCount,\n    favoriteList,\n    favoriteMoviesData,\n    handleSaveMovies,\n    handleDeleteMovies,\n    addMovies,\n    setAddMovies,\n    message,\n    isLoading,\n    setIsLoading,\n    favoriteListForRender,\n    setFavoriteListForRender\n  } = _ref;\n  const {\n    pathname\n  } = useLocation();\n\n  function handleClick() {\n    setMoviesCount(moviesCount + addMovies);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"movies-list\",\n      children: [pathname === '/movies' && moviesList && moviesList.map((item, index) => {\n        if (index + 1 <= moviesCount) {\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            movie: item,\n            handleSaveMovies: handleSaveMovies,\n            handleDeleteMovies: handleDeleteMovies,\n            favoriteList: favoriteListForRender,\n            favoriteListForRender: favoriteListForRender,\n            setFavoriteListForRender: setFavoriteListForRender\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this);\n        } else {\n          return '';\n        }\n      }), pathname === '/saved-movies' && favoriteMoviesData && favoriteMoviesData.map((item, index) => {\n        if (index + 1 <= moviesCount) {\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            movie: item,\n            handleDeleteMovies: handleDeleteMovies,\n            favoriteList: favoriteList //   favoriteListForRender={favoriteListForRender}\n            ,\n            setFavoriteListForRender: setFavoriteListForRender\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this);\n        } else {\n          return '';\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), pathname === '/movies' && moviesList ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : pathname === '/saved-movies' && favoriteList.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : '', pathname === '/movies' && moviesCount < moviesList.length && 0 < moviesCount && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"another-button__container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"another-button\",\n        onClick: handleClick,\n        children: \"\\u0415\\u0449\\u0451\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MoviesCardList, \"qVMqkCpYCjknUqSjfMln5RFSkbo=\", false, function () {\n  return [useLocation];\n});\n\n_c = MoviesCardList;\nexport default MoviesCardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"names":["useLocation","React","useEffect","useState","MoviesCard","Preloader","MoviesCardList","moviesList","setMoviesCount","moviesCount","favoriteList","favoriteMoviesData","handleSaveMovies","handleDeleteMovies","addMovies","setAddMovies","message","isLoading","setIsLoading","favoriteListForRender","setFavoriteListForRender","pathname","handleClick","map","item","index","length"],"mappings":"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","sourcesContent":["import { useLocation } from 'react-router';\nimport React, { useEffect, useState } from \"react\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\n\n\nfunction MoviesCardList({\n  moviesList,\n  setMoviesCount,\n  moviesCount,\n  favoriteList,\n  favoriteMoviesData,\n  handleSaveMovies,\n  handleDeleteMovies,\n  addMovies,\n  setAddMovies,\n  message,\n  isLoading,\n  setIsLoading,\n  favoriteListForRender,\n  setFavoriteListForRender\n}) {\n\n  const { pathname } = useLocation();\n\n\n\n  function handleClick() {\n    setMoviesCount(moviesCount + addMovies);\n  }\n\n  return (\n    <>\n      {isLoading ? (<Preloader />) :\n        (\n          <section className=\"movies-list\">\n            {pathname === '/movies' && moviesList &&\n              moviesList.map((item, index) => {\n                if (index + 1 <= moviesCount) {\n                  return (\n                    <MoviesCard\n                      movie={item}\n                      key={index}\n                      handleSaveMovies={handleSaveMovies}\n                      handleDeleteMovies={handleDeleteMovies}\n                      favoriteList={favoriteListForRender}\n                      favoriteListForRender={favoriteListForRender}\n                    setFavoriteListForRender={setFavoriteListForRender}\n                    />\n                  );\n                } else {\n                  return '';\n                }\n              })}\n            {pathname === '/saved-movies' && favoriteMoviesData &&\n              favoriteMoviesData.map((item, index) => {\n                if (index + 1 <= moviesCount) {\n                  return (\n                    <MoviesCard\n                      movie={item}\n                      key={index}\n                      handleDeleteMovies={handleDeleteMovies}\n                      favoriteList={favoriteList}\n                   //   favoriteListForRender={favoriteListForRender}\n                      setFavoriteListForRender={setFavoriteListForRender}\n                    />\n                  );\n                } else {\n                  return '';\n                }\n              })}\n          </section>\n        )\n      }\n      {pathname === '/movies' && moviesList ? (\n        <p className='error-message'>{message}</p>\n      ) : pathname === '/saved-movies' && favoriteList.length === 0 ? (\n        <p className='error-message'>{message}</p>\n      ) : (\n        ''\n      )}\n      {pathname === '/movies' && moviesCount < moviesList.length && 0 < moviesCount && (\n        <section className=\"another-button__container\">\n          <button className=\"another-button\" onClick={handleClick}>Ещё</button>\n        </section>\n      )}\n    </>\n\n  );\n}\n\nexport default MoviesCardList;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}