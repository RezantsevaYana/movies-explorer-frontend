{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoviesCardList(props) {\n  _s();\n\n  const [moviesList, setMoviesList] = useState([]);\n  const [moviesCount, setMoviesCount] = useState(12);\n  useEffect(() => [moviesApi.getInitialCards().then(cards => {\n    setMoviesList(cards);\n  }).catch(err => {\n    console.log(`Внимание! ${err}`);\n  })], []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies-list\",\n    children: moviesList.map((item, index) => {\n      if (index + 1 <= moviesCount) {\n        return /*#__PURE__*/_jsxDEV(MoviesCard, {\n          movie: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 28\n        }, this);\n      } else {\n        return '';\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MoviesCardList, \"eDect0569TIj58q8dNlt2rBf0WA=\");\n\n_c = MoviesCardList;\nexport default MoviesCardList;\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"names":["React","useEffect","useState","moviesApi","MoviesCard","Preloader","MoviesCardList","props","moviesList","setMoviesList","moviesCount","setMoviesCount","getInitialCards","then","cards","catch","err","console","log","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM,CACZE,SAAS,CAACS,eAAV,GACKC,IADL,CACWC,KAAD,IAAW;AACbL,IAAAA,aAAa,CAACK,KAAD,CAAb;AACH,GAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAYF,GAAI,EAA7B;AACH,GANL,CADY,CAAP,EAQN,EARM,CAAT;AAUA,sBACI;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,cACSR,UAAU,CAACW,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,UAAIA,KAAK,GAAG,CAAR,IAAaX,WAAjB,EAA8B;AAC5B,4BAAO,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEU;AAAnB,WAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF,KANA;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzBQf,c;;KAAAA,c;AA2BT,eAAeA,cAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\n\n\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n        </section>\n    );\n}\n\nexport default MoviesCardList;\n\n\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n"]},"metadata":{},"sourceType":"module"}