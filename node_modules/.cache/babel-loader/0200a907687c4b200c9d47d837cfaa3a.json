{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport './MoviesCardList.css';\nimport MoviesCard from '../MoviesCard/MoviesCard.js';\nimport Preloader from '../Preloader/Preloader.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoviesCardList() {\n  _s();\n\n  const routes = useLocation();\n  const [moviesList, setMoviesList] = useState([]);\n  const [moviesTotal, setMoviesTotal] = useState(12);\n  useEffect(() => {\n    moviesApi.getInitialCards().then(cardsInfo => {\n      setMoviesList(cardsInfo);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movie-list\",\n    children: [moviesList.length === 0 ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-list__roster\",\n      children: moviesList.map((item, index) => {\n        if (index + 1 <= moviesTotal) {\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            movie: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 28\n          }, this);\n        } else {\n          return '';\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), moviesTotal < 100 && routes.pathname === '/movies' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"movie-list__button movie-list__hover\",\n      onClick: () => setMoviesTotal(moviesTotal + 3),\n      children: \"\\u0415\\u0449\\u0451\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n/*\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\n\n\nfunction MoviesCardList() {\n    const [moviesList, setMoviesList] = useState([]);\n\n\n\n    useEffect(() => {\n        Promise.all(moviesApi.getInitialCards())\n            .then((movie) => {\n                setMoviesList(movie);\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            });\n    }, []);\n\n\n\n    return (\n        <section className=\"movies-list\">\n            {moviesList.map((item) => \n                <MoviesCard film={item} key={moviesList.id}/>\n            )}\n        </section>\n    );\n}\n\nexport default MoviesCardList;\n\n\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n\n_s(MoviesCardList, \"r50ezrV2F5E2Bq4e5xVBwPqnAVE=\", false, function () {\n  return [useLocation];\n});\n\n_c = MoviesCardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"names":["React","useEffect","useState","useLocation","MoviesCard","Preloader","moviesApi","MoviesCardList","routes","moviesList","setMoviesList","moviesTotal","setMoviesTotal","getInitialCards","then","cardsInfo","catch","err","console","log","length","map","item","index","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,eAAe,SAASC,cAAT,GAA2B;AAAA;;AAEtC,QAAMC,MAAM,GAAIL,WAAW,EAA3B;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,SAAS,CAACO,eAAV,GACKC,IADL,CACWC,SAAD,IAAe;AACjBL,MAAAA,aAAa,CAACK,SAAD,CAAb;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYF,GAAI,EAA7B;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,eACKR,UAAU,CAACW,MAAX,KAAsB,CAAtB,gBACD,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADC,gBAGD;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA,gBACKX,UAAU,CAACY,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,YAAIA,KAAK,GAAG,CAAR,IAAaZ,WAAjB,EAA8B;AAC1B,8BAAO,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEW;AAAnB,aAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFD,MAEO;AACH,iBAAO,EAAP;AACH;AACA,OANA;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,EAcEZ,WAAW,GAAG,GAAd,IAAqBH,MAAM,CAACgB,QAAP,KAAoB,SAAzC,iBACE;AAAS,MAAA,SAAS,EAAC,sCAAnB;AAA0D,MAAA,OAAO,EAAE,MAAMZ,cAAc,CAACD,WAAW,GAAG,CAAf,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAhHwBJ,c;UAEJJ,W;;;KAFII,c","sourcesContent":["import React,{ useEffect, useState } from 'react'\nimport { useLocation } from 'react-router';\nimport './MoviesCardList.css'\nimport MoviesCard from '../MoviesCard/MoviesCard.js'\nimport Preloader from '../Preloader/Preloader.js'\nimport moviesApi from \"../../utils/MoviesApi.js\";\n\nexport default function MoviesCardList () {\n\n    const routes  = useLocation()\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesTotal, setMoviesTotal] = useState(12);\n\n    useEffect(() => {\n        moviesApi.getInitialCards()\n            .then((cardsInfo) => {\n                setMoviesList(cardsInfo);\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            });\n    }, []);\n\n    return (\n        <section className='movie-list'>\n            {moviesList.length === 0 ? (\n            <Preloader />\n            ) : (\n            <ul className=\"movie-list__roster\">\n                {moviesList.map((item, index) => {\n                if (index + 1 <= moviesTotal) {\n                    return <MoviesCard movie={item} key={index} />;\n                } else {\n                    return '';\n                }\n                })}\n            </ul>\n        )}\n        { moviesTotal < 100 && routes.pathname === '/movies' && (\n            <button  className='movie-list__button movie-list__hover' onClick={() => setMoviesTotal(moviesTotal + 3)}>Ещё\n            </button>\n        )}\n            \n        </section>\n    );\n}\n\n\n\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\n\n\nfunction MoviesCardList() {\n    const [moviesList, setMoviesList] = useState([]);\n\n\n\n    useEffect(() => {\n        Promise.all(moviesApi.getInitialCards())\n            .then((movie) => {\n                setMoviesList(movie);\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            });\n    }, []);\n\n\n\n    return (\n        <section className=\"movies-list\">\n            {moviesList.map((item) => \n                <MoviesCard film={item} key={moviesList.id}/>\n            )}\n        </section>\n    );\n}\n\nexport default MoviesCardList;\n\n\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n\n\n"]},"metadata":{},"sourceType":"module"}