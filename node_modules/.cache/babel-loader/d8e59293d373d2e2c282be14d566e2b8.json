{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({}); // стэйт переменная открыти попапа\n\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false); // стэйт переменные регистрации и авторизации\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\"); // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false); // переменные состояния, отвечающие за отображение маил в хэдэр\n\n  const [email, setMail] = React.useState(\"\"); // переменная состояния для сохраненных фильмов в избранном\n\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]);\n  const navigate = useNavigate(); // открытие попапа\n\n  function onHeaderOpen() {\n    setIsPopupOpen(true);\n  } // закрытие попапа\n\n\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  } // для результата авторизации и регистрации - пока не реализовано\n\n\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n\n  useEffect(() => {\n    const savedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n\n    if (!savedMovies && isLoggedIn) {\n      mainApi.getSavedMovies().then(res => {\n        setFavoriteList(res);\n        localStorage.setItem('savedMovies', JSON.stringify(res));\n      }).catch(err => console.log(err));\n    } else {\n      setFavoriteList(savedMovies);\n    }\n  }, []); // сохранение фильма\n\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.savedMovies({\n      jwt,\n      movie\n    }).then(res => {\n      console.log(res);\n      setFavoriteList([...favoriteList, res]);\n      localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n      console.log(favoriteList);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление фильма\n\n\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log(movie);\n    const id = movie.movieId || movie.id;\n\n    const movieId = movie._id || favoriteList.find(item => item.movieId === movie.id)._id;\n\n    console.log(id);\n    mainApi.deleteMovies({\n      jwt,\n      movieId\n    }).then(res => {\n      console.log(res);\n\n      if (res) {\n        const arr = favoriteList.filter(item => item.movieId !== id);\n        setFavoriteList(arr);\n        localStorage.setItem('savedMovies', JSON.stringify(arr));\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // изменение инорфмации о пользователе\n\n\n  function handleUpdateUser(_ref) {\n    let {\n      name,\n      email\n    } = _ref;\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({\n      jwt,\n      name,\n      email\n    }).then(user => {\n      if (user._id) {\n        setCurrentUser(user);\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // проверка токенов авторизованных пользователей, вернувшихся в приложение\n\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) // проверяем токен\n      mainApi.checkToken(jwt).then(res => {\n        // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n        if (res) {\n          setCurrentUser(res);\n          setIsLoggedIn(true); //navigate(\"/movies\");\n        } else {\n          setCurrentUser({});\n        }\n      }).catch(err => {\n        console.log(`Внимание! ${err}`);\n        navigate(\"/signin\");\n      });\n  }, [navigate]); // регистрация\n\n  function onRegister(_ref2) {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    mainApi.register({\n      email,\n      password,\n      name\n    }).then(data => {\n      if (data.id) {\n        navigate('/signin');\n        onLogin({\n          email,\n          password\n        });\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n    });\n  } // авторизация\n\n\n  function onLogin(_ref3) {\n    let {\n      email,\n      password\n    } = _ref3;\n    mainApi.login({\n      email,\n      password\n    }).then(res => {\n      if (res.token) {\n        localStorage.setItem(\"jwt\", res.token);\n        console.log(res.token);\n        setIsLoggedIn(true);\n        navigate('/movies');\n        return res;\n      } else {\n        return;\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setLoginError('Что-то пошло не так, попробуйте еще раз!');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n    });\n  } // удаление токена при выходе\n\n\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    navigate(\"/signin\");\n    setIsLoggedIn(false);\n  }\n\n  return (\n    /*#__PURE__*/\n    // подключаем дерево компоненнтов к провайдеру контекста\n    _jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movies\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 75\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Movies, {\n                onHeaderOpen: onHeaderOpen,\n                handleSaveMovies: handleSaveMovies,\n                handleDeleteMovies: handleDeleteMovies,\n                favoriteList: favoriteList,\n                moviesList: moviesList,\n                setMoviesList: setMoviesList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 75\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/saved-movies\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 75\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SavedMovies, {\n                onHeaderOpen: onHeaderOpen,\n                favoriteList: favoriteList,\n                handleDeleteMovies: handleDeleteMovies,\n                moviesList: moviesList,\n                setMoviesList: setMoviesList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n                  onHeaderOpen: onHeaderOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 33\n                }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 77\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Profile, {\n                signOut: signOut,\n                onUpdateUser: handleUpdateUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: onLogin,\n              loginError: loginError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: onRegister,\n              registerError: registerError,\n              setRegisterError: setRegisterError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeaderPopup, {\n          isOpen: isPopupOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n          image: image,\n          title: title,\n          onClose: closeAllPopups,\n          isOpen: isInfoTooLtip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"Ssu8ci2msNlYyLsWVloLYclGyRo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App; // 4af5d9700806dbf78300b91a721f37fc0cef9a5f11da0a8f46ad1bc9b95e6c7e\n\n/*\nNODE_ENV=production\nJWT_SECRET=4af5d9700806dbf78300b91a721f37fc0cef9a5f11da0a8f46ad1bc9b95e6c7e\n*/\n\n/*\n\n*/\n// рендер фильмов в зависимости от размера экрана\n// поиск по списку сохраненных фильмов\n// чекбокс фильтр\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js"],"names":["React","useEffect","Routes","Route","Navigate","useNavigate","Movies","HeaderPopup","SavedMovies","NotFound","Profile","Login","Register","Main","Footer","CurrentUserContext","mainApi","notRegister","register","InfoTooLtip","ProtectedRoute","react","Header","Navigation","SigninButton","App","currentUser","setCurrentUser","useState","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","registerError","setRegisterError","loginError","setLoginError","image","setImage","title","setTitle","isInfoTooLtip","setIsInfoTooLtip","email","setMail","favoriteList","setFavoriteList","moviesList","setMoviesList","navigate","onHeaderOpen","closeAllPopups","handleInfoTooLtip","savedMovies","JSON","parse","localStorage","getItem","getSavedMovies","then","res","setItem","stringify","catch","err","console","log","handleSaveMovies","movie","jwt","handleDeleteMovies","id","movieId","_id","find","item","deleteMovies","arr","filter","handleUpdateUser","name","updateUser","user","checkToken","onRegister","password","data","onLogin","login","token","signOut","removeItem"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport react from 'react';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\n\n\nfunction App() {\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стэйт переменная открыти попапа\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n  // стэйт переменные регистрации и авторизации\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n\n  // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false);\n\n  // переменные состояния, отвечающие за отображение маил в хэдэр\n\n  const [email, setMail] = React.useState(\"\");\n\n  // переменная состояния для сохраненных фильмов в избранном\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]);\n  \n\n  const navigate = useNavigate();\n\n  // открытие попапа\n \n    function onHeaderOpen() {\n        setIsPopupOpen(true)\n    }\n    // закрытие попапа\n    function closeAllPopups() {\n      setIsPopupOpen(false);\n      setIsInfoTooLtip(false);\n    }\n    // для результата авторизации и регистрации - пока не реализовано\n    function handleInfoTooLtip() {\n      setIsInfoTooLtip(true);\n    }\n\n    useEffect(() => {\n      const savedMovies = JSON.parse(localStorage.getItem('savedMovies'));\n    if (!savedMovies && isLoggedIn) {\n      mainApi.getSavedMovies()\n        .then((res) => {\n          setFavoriteList(res);\n          localStorage.setItem('savedMovies', JSON.stringify(res));\n        })\n            .catch((err) => console.log(err));\n        } else {\n          setFavoriteList(savedMovies);\n        }\n        }, [])\n\n    // сохранение фильма\n    function handleSaveMovies(movie) {\n      const jwt = localStorage.getItem(\"jwt\");\n        mainApi.savedMovies({ jwt, movie })\n            .then((res) => {\n              console.log(res);\n              setFavoriteList([...favoriteList, res]);\n              localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n              console.log(favoriteList)\n          })\n          .catch((err) => {\n            console.log(`Внимание! ${err}`);\n          })\n    }\n\n    // удаление фильма\n    function handleDeleteMovies(movie) {\n      const jwt = localStorage.getItem(\"jwt\");\n      console.log(movie)\n      const id = movie.movieId || movie.id;\n      const movieId =\n      movie._id || favoriteList.find((item) => item.movieId === movie.id)._id;\n      console.log(id)\n      mainApi.deleteMovies({jwt, movieId}).\n        then((res) => {\n          console.log(res);\n           if (res) {\n            const arr = favoriteList.filter((item) => item.movieId !== id);\n            setFavoriteList(arr);\n            localStorage.setItem('savedMovies', JSON.stringify(arr));\n           }\n            \n          })\n          .catch((err) => {\n            console.log(`Внимание! ${err}`);\n          })\n    }\n\n\n\n    // изменение инорфмации о пользователе\n    function handleUpdateUser({name, email}) {\n      const jwt = localStorage.getItem(\"jwt\");\n      mainApi.updateUser({jwt, name, email})\n        .then((user) => {\n          if (user._id) {\n            setCurrentUser(user);\n          }\n        }).catch((err) => {\n          console.log(`Внимание! ${err}`);\n        });\n    }\n\n  \n    \n\n    // проверка токенов авторизованных пользователей, вернувшихся в приложение\n  React.useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt)\n      // проверяем токен\n      mainApi\n        .checkToken(jwt)\n        .then((res) => {\n          // авторизуем пользователя, если токен найден, перенаправляя его на главную страницу\n          if (res) {\n            setCurrentUser(res)\n            setIsLoggedIn(true);\n            //navigate(\"/movies\");\n          } else {\n            setCurrentUser({})\n          }\n        })\n        .catch((err) => {\n          console.log(`Внимание! ${err}`);\n          navigate(\"/signin\");\n        });\n  }, [navigate]);\n\n   // регистрация\n  function onRegister({email, password, name }) {\n    mainApi.register({ email, password, name })\n        .then((data) => {\n          if (data.id) {\n            navigate('/signin');\n            onLogin({ email, password });\n          }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setRegisterError('Что-то пошло не так! Попробуйте ещё раз.');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      })\n  }\n  // авторизация\n  function onLogin({ email, password }) {\n    mainApi.login({ email, password })\n      .then((res) => {\n        if (res.token) {\n          localStorage.setItem(\"jwt\", res.token);\n          console.log(res.token);\n          setIsLoggedIn(true);\n          navigate('/movies');\n          return res;\n        } else {\n          return\n        }\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setLoginError('Что-то пошло не так, попробуйте еще раз!');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      })\n  }\n\n  // удаление токена при выходе\n  function signOut() {\n    // удаление токена\n    localStorage.removeItem(\"jwt\");\n    navigate(\"/signin\");\n    setIsLoggedIn(false);\n  }\n\n\n  return (\n    // подключаем дерево компоненнтов к провайдеру контекста\n    <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"App\">\n          <Routes>\n            <Route path='/movies' element={\n              <>\n                <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen}/> : <SigninButton /> }\n                </Header>\n                <Movies onHeaderOpen={onHeaderOpen}\n                 handleSaveMovies={handleSaveMovies} \n                 handleDeleteMovies={handleDeleteMovies}\n                 favoriteList={favoriteList} \n                 moviesList={moviesList}\n                 setMoviesList={setMoviesList}\n                 />\n              </>\n            } />\n            <Route path=\"/\" element={\n              <>\n                <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen}/> : <SigninButton /> }\n                </Header>\n                <Main />\n              </>\n                } />\n            <Route path=\"/saved-movies\" element={\n              <>\n                <Header>\n                {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen}/> : <SigninButton /> }\n                </Header>\n                <SavedMovies\n                onHeaderOpen={onHeaderOpen}\n                favoriteList={favoriteList}\n                handleDeleteMovies={handleDeleteMovies}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                />\n              </>\n            } />\n            <Route path=\"/profile\" element={\n              <>\n                <Header>\n                  {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen}/> : <SigninButton /> }\n                </Header>\n                <Profile signOut={signOut} onUpdateUser={handleUpdateUser}/>\n              </>\n            } />\n            <Route path=\"/signin\" element={\n              <Login onLogin={onLogin} loginError={loginError}/>\n            } />\n            <Route path=\"/signup\" element={\n              <Register onRegister={onRegister} registerError={registerError} setRegisterError={setRegisterError} />\n            } />\n            <Route path=\"*\" element={\n              <NotFound />\n            } />\n          </Routes>\n\n          <HeaderPopup isOpen={isPopupOpen} onClose={closeAllPopups} />\n          <InfoTooLtip\n          image={image}\n          title={title}\n          onClose={closeAllPopups}\n          isOpen={isInfoTooLtip}\n        />\n        </div>\n      </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n\n// 4af5d9700806dbf78300b91a721f37fc0cef9a5f11da0a8f46ad1bc9b95e6c7e\n/*\nNODE_ENV=production\nJWT_SECRET=4af5d9700806dbf78300b91a721f37fc0cef9a5f11da0a8f46ad1bc9b95e6c7e\n*/\n\n/*\n\n*/\n\n\n// рендер фильмов в зависимости от размера экрана\n// поиск по списку сохраненных фильмов\n// чекбокс фильтр\n\n\n"]},"metadata":{},"sourceType":"module"}