{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport AnotherButton from \"../AnotherButton/AnotherButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MoviesCardList() {\n  _s();\n\n  const routes = useLocation();\n  const [moviesList, setMoviesList] = useState([]);\n  const [moviesCount, setMoviesCount] = useState(12);\n  useEffect(() => {\n    moviesApi.getInitialCards().then(cardsInfo => {\n      setMoviesList(cardsInfo);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [moviesList.length === 0 ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"movies-list\",\n      children: moviesList.map((item, index) => {\n        if (index + 1 <= moviesCount) {\n          return /*#__PURE__*/_jsxDEV(MoviesCard, {\n            film: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 24\n          }, this);\n        } else {\n          return '';\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this), moviesCount < 50 && routes.pathname === \"/movies\" && /*#__PURE__*/_jsxDEV(AnotherButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MoviesCardList, \"EmJSf7UcH/xGOjUB4CFGlsB+AhY=\", true);\n\n_c = MoviesCardList;\nexport default MoviesCardList;\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"names":["React","useEffect","useState","moviesApi","MoviesCard","Preloader","AnotherButton","MoviesCardList","routes","useLocation","moviesList","setMoviesList","moviesCount","setMoviesCount","getInitialCards","then","cardsInfo","catch","err","console","log","length","map","item","index","pathname"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;;;AAGA,SAASC,cAAT,GAA0B;AAAA;;AACtB,QAAMC,MAAM,GAAIC,WAAW,EAA3B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,SAAS,CAACW,eAAV,GACKC,IADL,CACWC,SAAD,IAAe;AACjBL,MAAAA,aAAa,CAACK,SAAD,CAAb;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYF,GAAI,EAA7B;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;AAYA,sBACI;AAAA,eAEIR,UAAU,CAACW,MAAX,KAAsB,CAAtB,gBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAEC;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,gBACAX,UAAU,CAACY,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,YAAIA,KAAK,GAAG,CAAR,IAAaZ,WAAjB,EAA8B;AAC5B,8BAAO,QAAC,UAAD;AAAY,YAAA,IAAI,EAAEW;AAAlB,aAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD,MAEO;AACL,iBAAO,EAAP;AACD;AACF,OANA;AADA;AAAA;AAAA;AAAA;AAAA,YAJL,EAcEZ,WAAW,GAAG,EAAd,IAAoBJ,MAAM,CAACiB,QAAP,KAAoB,SAAxC,iBACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA,kBADJ;AAoBH;;GArCQlB,c;;KAAAA,c;AAuCT,eAAeA,cAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport AnotherButton from \"../AnotherButton/AnotherButton.js\";\n\n\nfunction MoviesCardList() {\n    const routes  = useLocation();\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => {\n        moviesApi.getInitialCards()\n            .then((cardsInfo) => {\n                setMoviesList(cardsInfo);\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            });\n    }, []);\n\n\n\n    return (\n        <>\n        {\n            moviesList.length === 0 ?\n            (<Preloader />) :\n            (<section className=\"movies-list\">\n            {moviesList.map((item, index) => {\n              if (index + 1 <= moviesCount) {\n                return <MoviesCard film={item} key={index} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n        }\n        { moviesCount < 50 && routes.pathname === \"/movies\" &&  (\n            <AnotherButton />\n        )}\n        </>\n    );\n}\n\nexport default MoviesCardList;\n\n\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n\n\n"]},"metadata":{},"sourceType":"module"}