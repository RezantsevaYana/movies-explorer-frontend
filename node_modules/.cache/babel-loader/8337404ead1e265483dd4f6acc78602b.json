{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoviesCardList(props) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies-list\",\n    children: /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MoviesCardList;\nexport default MoviesCardList;\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"names":["React","useEffect","useState","moviesApi","MoviesCard","Preloader","MoviesCardList","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAG3B,sBACI;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,2BAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KATQD,c;AAWT,eAAeA,cAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\n\n\nfunction MoviesCardList(props) {\n    \n\n    return (\n        <section className=\"movies-list\">\n\n            <Preloader />\n        </section>\n    );\n}\n\nexport default MoviesCardList;\n\n\n/*\nfunction MoviesCardList(props) {\n    const [moviesList, setMoviesList] = useState([]);\n    const [moviesCount, setMoviesCount] = useState(12);\n\n    useEffect(() => [\n        moviesApi.getInitialCards()\n            .then((cards) => {\n                setMoviesList(cards)\n            })\n            .catch((err) => {\n                console.log(`Внимание! ${err}`);\n            })\n    ], []);\n\n    return (\n        <section className=\"movies-list\">\n            {\n                moviesList.length === 0 ?\n                (<Preloader />) :\n                (<>\n                {moviesList.map((item, index) => {\n                  if (index + 1 <= moviesCount) {\n                    return <MoviesCard movie={item} key={index} />;\n                  } else {\n                    return '';\n                  }\n                })}\n                </>)\n            }\n        </section>\n    );\n}\n */\n"]},"metadata":{},"sourceType":"module"}