{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Footer from \"../Footer/Footer\";\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movies(_ref) {\n  _s();\n\n  let {\n    onHeaderOpen,\n    handleSaveMovies,\n    handleDeleteMovies,\n    moviesList,\n    setMoviesList,\n    favoriteList,\n    moviesCount,\n    setMoviesCount,\n    addMovies,\n    setAddMovies,\n    isLoading,\n    setIsLoading,\n    favoriteListForRender,\n    setFavoriteListForRender\n  } = _ref;\n  const routes = useLocation();\n  const [message, setMessage] = React.useState('');\n  const valueData = localStorage.getItem('value');\n  const [value, setValue] = React.useState(valueData && routes.pathname === '/movies' ? valueData : ''); // стейт-переменная состояния тумблера\n\n  const checkBoxStatus = JSON.parse(localStorage.getItem('checkBoxStatus'));\n  const [checked, setChecked] = useState(false);\n  const [shortList, setShortList] = useState([]); // фильтрация массива через поиск по ключевому слову\n\n  useEffect(() => {\n    const filterMovies = JSON.parse(sessionStorage.getItem('movies')).filter(movie => movie.nameRU.toLowerCase().indexOf(value.toLowerCase()) > -1);\n\n    if (filterMovies.length) {\n      setMoviesList(filterMovies);\n      localStorage.setItem('foundMovies', JSON.stringify(filterMovies));\n    } else {\n      setMoviesList([]);\n      setMessage('Ничего не найдено');\n    }\n  }, [value]);\n\n  function handleSubmitSearchForm(value) {\n    setValue(value);\n  } // фильтрация массива через установку тумблера (продолжительность фильма)\n\n\n  useEffect(() => {\n    if (checkBoxStatus) {\n      const newShortList = JSON.parse(localStorage.getItem('foundMovies')).filter(movie => movie.duration <= 40);\n      setShortList(newShortList);\n      localStorage.setItem('foundMovies', JSON.stringify(newShortList));\n    } else {\n      setShortList([]);\n      setMessage('Ничего не найдено');\n    }\n  }, [checkBoxStatus]);\n\n  function handleCheckboxChange(isCheckboxOn) {\n    setChecked(isCheckboxOn);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      setMoviesCount: setMoviesCount,\n      setMoviesList: setMoviesList,\n      handleSubmitSearchForm: handleSubmitSearchForm,\n      handleCheckboxChange: handleCheckboxChange,\n      checkBoxStatus: checkBoxStatus,\n      checked: checked,\n      setChecked: setChecked,\n      isLoading: isLoading,\n      setIsLoading: setIsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MoviesCardList, {\n      favoriteListForRender: favoriteListForRender,\n      setFavoriteListForRender: setFavoriteListForRender,\n      setMoviesCount: setMoviesCount,\n      moviesCount: moviesCount,\n      moviesList: checkBoxStatus ? shortList : moviesList,\n      handleSaveMovies: handleSaveMovies,\n      handleDeleteMovies: handleDeleteMovies,\n      favoriteList: favoriteList,\n      addMovies: addMovies,\n      setAddMovies: setAddMovies,\n      message: message,\n      isLoading: isLoading,\n      setIsLoading: setIsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"xINH8dUpyADMoG9Th8QWFgMiZ90=\", false, function () {\n  return [useLocation];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/Movies/Movies.js"],"names":["React","useEffect","useState","MoviesCardList","SearchForm","Footer","useLocation","Movies","onHeaderOpen","handleSaveMovies","handleDeleteMovies","moviesList","setMoviesList","favoriteList","moviesCount","setMoviesCount","addMovies","setAddMovies","isLoading","setIsLoading","favoriteListForRender","setFavoriteListForRender","routes","message","setMessage","valueData","localStorage","getItem","value","setValue","pathname","checkBoxStatus","JSON","parse","checked","setChecked","shortList","setShortList","filterMovies","sessionStorage","filter","movie","nameRU","toLowerCase","indexOf","length","setItem","stringify","handleSubmitSearchForm","newShortList","duration","handleCheckboxChange","isCheckboxOn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Footer from \"../Footer/Footer\";\nimport { useLocation } from 'react-router';\n\nfunction Movies({ onHeaderOpen,\n    handleSaveMovies,\n    handleDeleteMovies,\n    moviesList,\n    setMoviesList,\n    favoriteList,\n    moviesCount,\n    setMoviesCount,\n    addMovies,\n    setAddMovies,\n    isLoading,\n    setIsLoading,\n    favoriteListForRender,\n    setFavoriteListForRender }) {\n    const routes = useLocation();\n\n    const [message, setMessage] = React.useState('')\n\n    const valueData = localStorage.getItem('value');\n    const [value, setValue] = React.useState(valueData && routes.pathname === '/movies' ? valueData : '');\n\n    // стейт-переменная состояния тумблера\n    const checkBoxStatus = JSON.parse(localStorage.getItem('checkBoxStatus'));\n\n    const [checked, setChecked] = useState(false);\n    const [shortList, setShortList] = useState([]);\n\n \n    // фильтрация массива через поиск по ключевому слову\n    useEffect(() => {\n        const filterMovies = JSON.parse(sessionStorage.getItem('movies')).filter((movie) =>\n            movie.nameRU.toLowerCase().indexOf(value.toLowerCase()) > -1)\n        if (filterMovies.length) {\n            setMoviesList(filterMovies);\n            localStorage.setItem('foundMovies', JSON.stringify(filterMovies));\n        } else {\n            setMoviesList([]);\n            setMessage('Ничего не найдено');\n        }\n    }, [value])\n\n\n    function handleSubmitSearchForm(value) {\n        setValue(value);\n    }\n\n\n    // фильтрация массива через установку тумблера (продолжительность фильма)\n    useEffect(() => {\n        if (checkBoxStatus) {\n            const newShortList = JSON.parse(localStorage.getItem('foundMovies')).filter(movie => movie.duration <= 40)\n            setShortList(newShortList);\n            localStorage.setItem('foundMovies', JSON.stringify(newShortList));\n        } else {\n            setShortList([]);\n            setMessage('Ничего не найдено');\n        }\n    }, [checkBoxStatus])\n\n\n    function handleCheckboxChange(isCheckboxOn) {\n        setChecked(isCheckboxOn);\n    }\n\n\n    return (\n        <section className=\"movies\">\n            <SearchForm setMoviesCount={setMoviesCount}\n                setMoviesList={setMoviesList}\n                handleSubmitSearchForm={handleSubmitSearchForm}\n                handleCheckboxChange={handleCheckboxChange}\n                checkBoxStatus={checkBoxStatus}\n                checked={checked}\n                setChecked={setChecked}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n            >\n            </SearchForm>\n            <MoviesCardList\n                favoriteListForRender={favoriteListForRender}\n                setFavoriteListForRender={setFavoriteListForRender}\n                setMoviesCount={setMoviesCount}\n                moviesCount={moviesCount}\n                moviesList={checkBoxStatus ? shortList : moviesList}\n                handleSaveMovies={handleSaveMovies}\n                handleDeleteMovies={handleDeleteMovies}\n                favoriteList={favoriteList}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                message={message}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n            />\n            <Footer></Footer>\n        </section>\n\n\n    );\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}