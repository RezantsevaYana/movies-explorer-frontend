{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const routes = useLocation();\n  const isHeader = routes.pathname === '/movies' || routes.pathname === '/' || routes.pathname === '/saved-movies' || routes.pathname === '/profile'; // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n\n  const [currentUser, setCurrentUser] = React.useState({}); // стэйт переменная открыти попапа\n\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false); // стэйт переменные регистрации и авторизации\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [isUserCheck, setIsUserCheck] = React.useState(false);\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\"); // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false); // переменная состояния для сохраненных фильмов в избранном\n\n  const [favoriteList, setFavoriteList] = React.useState([]);\n  const [moviesList, setMoviesList] = React.useState([]); // переменные состояния для добавления фильмов\n\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n  const navigate = useNavigate(); // ширина\n\n  const width = ScreenSize(); // отображение прейлодера\n\n  const [isLoading, setIsLoading] = React.useState(false); // открытие попапов\n\n  function onHeaderOpen() {\n    setIsPopupOpen(true);\n  } // закрытие попапов\n\n\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  } // для результата авторизации и регистрации и изменения пользователя\n\n\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  } // добавление карточек в зависимости от ширины экрана\n\n\n  useEffect(() => {\n    function getCards() {\n      if (width >= 1280) {\n        setMoviesCount(12);\n        setAddMovies(3);\n      } else if (width < 1279 && width >= 767) {\n        setMoviesCount(8);\n        setAddMovies(2);\n      } else if (width <= 766) {\n        setMoviesCount(5);\n        setAddMovies(1);\n      }\n    }\n\n    getCards();\n  }, [width]);\n  /*\n    // рендер коллекции карточек\n    useEffect(() => {\n      const jwt = localStorage.getItem(\"jwt\");\n      setIsLoading(true);\n      // рендер первоначальной коллекции фильмов\n      moviesApi.getInitialCards()\n        .then((movies) => {\n          setMoviesList(movies);\n          sessionStorage.setItem('movies', JSON.stringify(movies));\n          setIsLoading(false);\n        }).catch((err) => {\n          console.log(`Внимание! ${err}`);\n        });\n  \n      // рендер сохраненных фильмов\n      mainApi.getMovies(jwt).then((res) => {\n        console.log(res)\n        //  console.log('отработал useEffect рендера списка сохраненных фильмов')\n        setFavoriteList(res[2].data);\n        localStorage.setItem('savedMovies', JSON.stringify(res[2].data));\n        setIsLoading(false);\n      })\n        .catch((err) => {\n          console.log(`Внимание! ${err}`);\n        });\n  \n    }, [])\n    */\n  //console.log(favoriteList)\n  // сохранение фильма\n\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log(movie);\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({\n      jwt,\n      movie\n    }).then(res => {\n      console.log(res);\n      console.log(favoriteList);\n      setFavoriteList([...favoriteList, res]);\n      localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // удаление фильма\n\n\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    const id = movie.movieId || movie.id;\n\n    const movieId = movie._id || favoriteList.find(item => item.movieId === movie.id)._id;\n\n    mainApi.deleteMovies({\n      jwt,\n      movieId\n    }).then(res => {\n      console.log(res);\n\n      if (res) {\n        const arr = JSON.parse(localStorage.getItem('savedMovies')).filter(item => item.movieId !== id);\n        setFavoriteList(arr);\n        localStorage.setItem('savedMovies', JSON.stringify(arr));\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  } // изменение инорфмации о пользователе\n\n\n  function handleUpdateUser(_ref) {\n    let {\n      name,\n      email\n    } = _ref;\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({\n      jwt,\n      name,\n      email\n    }).then(user => {\n      setTitle(\"Данные успешно изменены!\");\n      setImage(register);\n\n      if (user._id) {\n        setCurrentUser(user);\n      }\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n    }).finally(handleInfoTooLtip);\n  } // проверка токенов авторизованных пользователей, вернувшихся в приложение\n\n\n  useEffect(() => {\n    console.log('useEffect в App отработал');\n    const jwt = localStorage.getItem(\"jwt\");\n\n    if (localStorage.jwt) {\n      setIsLoggedIn(true);\n      mainApi.getUserInfo(jwt).then(profile => {\n        setIsLoggedIn(true);\n        console.log(profile);\n        setCurrentUser(profile);\n        localStorage.setItem('currentUser', JSON.stringify(profile));\n        navigate(routes.pathname);\n      }).catch(err => {\n        navigate('/signin');\n        console.log(`Внимание! ${err}`);\n      });\n    }\n  }, []); // регистрация\n\n  function onRegister(_ref2) {\n    let {\n      email,\n      password,\n      name\n    } = _ref2;\n    mainApi.register({\n      email,\n      password,\n      name\n    }).then(data => {\n      onLogin({\n        email,\n        password\n      });\n      navigate('/movies');\n      setTitle(\"Вы успешно зарегистрировались!\");\n      setImage(register);\n      setIsLoggedIn(true);\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      setRegisterError('Что-то пошло не так, попробуйте еще раз!');\n    }).finally(handleInfoTooLtip);\n  } // авторизация\n\n\n  function onLogin(_ref3) {\n    let {\n      email,\n      password\n    } = _ref3;\n    mainApi.login({\n      email,\n      password\n    }).then(res => {\n      navigate('/movies');\n      localStorage.setItem(\"jwt\", res.token);\n      setData();\n      localStorage.setItem('currentUser', JSON.stringify(res)); // console.log(res.token);\n\n      localStorage.setItem('isLoggedIn', true);\n      setIsLoggedIn(true);\n      return res;\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n      setLoginError('Что-то пошло не так, попробуйте еще раз!');\n      if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n      setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n      setImage(notRegister);\n      handleInfoTooLtip();\n    });\n  }\n\n  function setData() {\n    const jwt = localStorage.getItem(\"jwt\");\n    const profileInfo = mainApi.getUserInfo(jwt);\n    const movies = moviesApi.getInitialCards();\n    const favoriteMovies = mainApi.getMovies(jwt);\n    Promise.all([profileInfo, movies, favoriteMovies]).then(res => {\n      setCurrentUser(res);\n      setMoviesList(res);\n      setFavoriteList(res[2].data);\n      localStorage.setItem('currentUser', JSON.stringify(res));\n      localStorage.setItem('movies', JSON.stringify(res));\n      localStorage.setItem('savedMovies', JSON.stringify(res[2].data));\n    }).catch(err => {\n      console.log(`Внимание! ${err}`);\n    });\n  }\n\n  ; // удаление токена при выходе\n\n  function signOut() {\n    localStorage.clear();\n    navigate(\"/\"); //setFavoriteList([]);\n    //  setMoviesList([]);\n\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [isHeader && /*#__PURE__*/_jsxDEV(Header, {\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigation, {\n          onHeaderOpen: onHeaderOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(SigninButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            isLoggedIn: isLoggedIn,\n            component: Movies,\n            onHeaderOpen: onHeaderOpen,\n            handleSaveMovies: handleSaveMovies,\n            handleDeleteMovies: handleDeleteMovies,\n            favoriteList: favoriteList,\n            moviesList: moviesList,\n            setMoviesList: setMoviesList,\n            moviesCount: moviesCount,\n            setMoviesCount: setMoviesCount,\n            addMovies: addMovies,\n            setAddMovies: setAddMovies,\n            isLoading: isLoading,\n            setIsLoading: setIsLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/saved-movies\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: SavedMovies,\n            isLoggedIn: isLoggedIn,\n            onHeaderOpen: onHeaderOpen,\n            favoriteList: favoriteList,\n            setFavoriteList: setFavoriteList,\n            handleDeleteMovies: handleDeleteMovies,\n            handleSaveMovies: handleSaveMovies,\n            moviesList: moviesList,\n            setMoviesList: setMoviesList,\n            moviesCount: moviesCount,\n            setMoviesCount: setMoviesCount,\n            addMovies: addMovies,\n            setAddMovies: setAddMovies,\n            isLoading: isLoading,\n            setIsLoading: setIsLoading,\n            isLoading: isLoading,\n            setIsLoading: setIsLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Profile,\n            isLoggedIn: isLoggedIn,\n            signOut: signOut,\n            onUpdateUser: handleUpdateUser,\n            changeError: changeError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Login,\n            isLoggedIn: !isLoggedIn,\n            onLogin: onLogin,\n            loginError: loginError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Register,\n            isLoggedIn: !isLoggedIn,\n            onRegister: onRegister,\n            registerError: registerError,\n            setRegisterError: setRegisterError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(HeaderPopup, {\n        isOpen: isPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooLtip, {\n        image: image,\n        title: title,\n        onClose: closeAllPopups,\n        isOpen: isInfoTooLtip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZlStmIQunFQoOFhP9BmMxpxLWhk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/App/App.js"],"names":["React","useEffect","Routes","Route","Navigate","useNavigate","useLocation","Movies","HeaderPopup","SavedMovies","NotFound","Profile","Login","Register","Main","CurrentUserContext","mainApi","moviesApi","notRegister","register","InfoTooLtip","Header","Navigation","SigninButton","ScreenSize","ProtectedRoute","App","routes","isHeader","pathname","currentUser","setCurrentUser","useState","isPopupOpen","setIsPopupOpen","isLoggedIn","setIsLoggedIn","isUserCheck","setIsUserCheck","registerError","setRegisterError","loginError","setLoginError","changeError","setChangeError","image","setImage","title","setTitle","isInfoTooLtip","setIsInfoTooLtip","favoriteList","setFavoriteList","moviesList","setMoviesList","moviesCount","setMoviesCount","addMovies","setAddMovies","navigate","width","isLoading","setIsLoading","onHeaderOpen","closeAllPopups","handleInfoTooLtip","getCards","handleSaveMovies","movie","jwt","localStorage","getItem","console","log","savedMovies","then","res","setItem","JSON","stringify","catch","err","handleDeleteMovies","id","movieId","_id","find","item","deleteMovies","arr","parse","filter","handleUpdateUser","name","email","updateUser","user","finally","getUserInfo","profile","onRegister","password","data","onLogin","login","token","setData","profileInfo","movies","getInitialCards","favoriteMovies","getMovies","Promise","all","signOut","clear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,WAAlC,EAA+CC,WAA/C,QAAkE,kBAAlE;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,kBAAT,QAAmC,sCAAnC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGrB,WAAW,EAA1B;AAEA,QAAMsB,QAAQ,GACZD,MAAM,CAACE,QAAP,KAAoB,SAApB,IACAF,MAAM,CAACE,QAAP,KAAoB,GADpB,IAEAF,MAAM,CAACE,QAAP,KAAoB,eAFpB,IAGAF,MAAM,CAACE,QAAP,KAAoB,UAJtB,CAHa,CAUb;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC/B,KAAK,CAACgC,QAAN,CAAe,EAAf,CAAtC,CAXa,CAYb;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClC,KAAK,CAACgC,QAAN,CAAe,KAAf,CAAtC,CAba,CAeb;;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BpC,KAAK,CAACgC,QAAN,CAAe,KAAf,CAApC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCtC,KAAK,CAACgC,QAAN,CAAe,KAAf,CAAtC;AAEA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCxC,KAAK,CAACgC,QAAN,CAAe,EAAf,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8B1C,KAAK,CAACgC,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgC5C,KAAK,CAACgC,QAAN,CAAe,EAAf,CAAtC,CArBa,CAuBb;;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoB9C,KAAK,CAACgC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhD,KAAK,CAACgC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClD,KAAK,CAACgC,QAAN,CAAe,KAAf,CAA1C,CA1Ba,CA4Bb;;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpD,KAAK,CAACgC,QAAN,CAAe,EAAf,CAAxC;AAEA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtD,KAAK,CAACgC,QAAN,CAAe,EAAf,CAApC,CA/Ba,CAgCb;;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxD,KAAK,CAACgC,QAAN,CAAe,CAAf,CAAtC;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1D,KAAK,CAACgC,QAAN,CAAe,CAAf,CAAlC;AAEA,QAAM2B,QAAQ,GAAGtD,WAAW,EAA5B,CApCa,CAsCb;;AACA,QAAMuD,KAAK,GAAGpC,UAAU,EAAxB,CAvCa,CAyCb;;AACA,QAAM,CAACqC,SAAD,EAAYC,YAAZ,IAA4B9D,KAAK,CAACgC,QAAN,CAAe,KAAf,CAAlC,CA1Ca,CA4Cb;;AACA,WAAS+B,YAAT,GAAwB;AACtB7B,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GA/CY,CAiDb;;;AACA,WAAS8B,cAAT,GAA0B;AACxB9B,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAgB,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GArDY,CAsDb;;;AACA,WAASe,iBAAT,GAA6B;AAC3Bf,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAzDY,CA2Db;;;AACAjD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASiE,QAAT,GAAoB;AAClB,UAAIN,KAAK,IAAI,IAAb,EAAmB;AACjBJ,QAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACD,OAHD,MAGO,IAAIE,KAAK,GAAG,IAAR,IAAgBA,KAAK,IAAI,GAA7B,EAAkC;AACvCJ,QAAAA,cAAc,CAAC,CAAD,CAAd;AACAE,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACD,OAHM,MAGA,IAAIE,KAAK,IAAI,GAAb,EAAkB;AACvBJ,QAAAA,cAAc,CAAC,CAAD,CAAd;AACAE,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACD;AACF;;AACDQ,IAAAA,QAAQ;AACT,GAdQ,EAcN,CAACN,KAAD,CAdM,CAAT;AAeF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKE;AAGA;;AACA,WAASO,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,UAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAhB,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBiB,KAAlB,CAAD,CAAf;AACApD,IAAAA,OAAO,CAAC0D,WAAR,CAAoB;AAAEL,MAAAA,GAAF;AAAOD,MAAAA;AAAP,KAApB,EACGO,IADH,CACSC,GAAD,IAAS;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYtB,YAAZ;AACAC,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkByB,GAAlB,CAAD,CAAf;AACAN,MAAAA,YAAY,CAACO,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAe,CAAC,GAAG5B,YAAJ,EAAkByB,GAAlB,CAAf,CAApC;AACD,KANH,EAOGI,KAPH,CAOUC,GAAD,IAAS;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYQ,GAAI,EAA7B;AACD,KATH;AAUD,GA9HY,CAgIb;;;AACA,WAASC,kBAAT,CAA4Bd,KAA5B,EAAmC;AACjC,UAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACA,UAAMY,EAAE,GAAGf,KAAK,CAACgB,OAAN,IAAiBhB,KAAK,CAACe,EAAlC;;AACA,UAAMC,OAAO,GACXhB,KAAK,CAACiB,GAAN,IAAalC,YAAY,CAACmC,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACH,OAAL,KAAiBhB,KAAK,CAACe,EAAnD,EAAuDE,GADtE;;AAEArE,IAAAA,OAAO,CAACwE,YAAR,CAAqB;AAAEnB,MAAAA,GAAF;AAAOe,MAAAA;AAAP,KAArB,EACET,IADF,CACQC,GAAD,IAAS;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;;AACA,UAAIA,GAAJ,EAAS;AACP,cAAMa,GAAG,GAAGX,IAAI,CAACY,KAAL,CAAWpB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,EAAgDoB,MAAhD,CAAwDJ,IAAD,IAAUA,IAAI,CAACH,OAAL,KAAiBD,EAAlF,CAAZ;AACA/B,QAAAA,eAAe,CAACqC,GAAD,CAAf;AACAnB,QAAAA,YAAY,CAACO,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeU,GAAf,CAApC;AACD;AACF,KARH,EASGT,KATH,CASUC,GAAD,IAAS;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYQ,GAAI,EAA7B;AACD,KAXH;AAYD,GAlJY,CAsJb;;;AACA,WAASW,gBAAT,OAA2C;AAAA,QAAjB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAiB;AACzC,UAAMzB,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACAvD,IAAAA,OAAO,CAAC+E,UAAR,CAAmB;AAAE1B,MAAAA,GAAF;AAAOwB,MAAAA,IAAP;AAAaC,MAAAA;AAAb,KAAnB,EACGnB,IADH,CACSqB,IAAD,IAAU;AACdhD,MAAAA,QAAQ,CAAC,0BAAD,CAAR;AACAF,MAAAA,QAAQ,CAAC3B,QAAD,CAAR;;AACA,UAAI6E,IAAI,CAACX,GAAT,EAAc;AACZtD,QAAAA,cAAc,CAACiE,IAAD,CAAd;AACD;AACF,KAPH,EAOKhB,KAPL,CAOYC,GAAD,IAAS;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYQ,GAAI,EAA7B;AACAjC,MAAAA,QAAQ,CAAC,0CAAD,CAAR;AACAF,MAAAA,QAAQ,CAAC5B,WAAD,CAAR;AACD,KAXH,EAWK+E,OAXL,CAWahC,iBAXb;AAYD,GArKY,CAwKb;;;AACAhE,EAAAA,SAAS,CAAC,MAAM;AACduE,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,UAAMJ,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;;AACA,QAAID,YAAY,CAACD,GAAjB,EAAsB;AACpBjC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACApB,MAAAA,OAAO,CAACkF,WAAR,CAAoB7B,GAApB,EACCM,IADD,CACOwB,OAAD,IAAa;AACjB/D,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAoC,QAAAA,OAAO,CAACC,GAAR,CAAY0B,OAAZ;AACApE,QAAAA,cAAc,CAACoE,OAAD,CAAd;AACA7B,QAAAA,YAAY,CAACO,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeoB,OAAf,CAApC;AACAxC,QAAAA,QAAQ,CAAChC,MAAM,CAACE,QAAR,CAAR;AACD,OAPD,EAQCmD,KARD,CAQQC,GAAD,IAAS;AACdtB,QAAAA,QAAQ,CAAC,SAAD,CAAR;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAa,aAAYQ,GAAI,EAA7B;AACD,OAXD;AAYD;AACF,GAlBQ,EAkBN,EAlBM,CAAT,CAzKa,CA8Lb;;AACA,WAASmB,UAAT,QAA+C;AAAA,QAA3B;AAAEN,MAAAA,KAAF;AAASO,MAAAA,QAAT;AAAmBR,MAAAA;AAAnB,KAA2B;AAC7C7E,IAAAA,OAAO,CAACG,QAAR,CAAiB;AAAE2E,MAAAA,KAAF;AAASO,MAAAA,QAAT;AAAmBR,MAAAA;AAAnB,KAAjB,EACGlB,IADH,CACS2B,IAAD,IAAU;AACdC,MAAAA,OAAO,CAAC;AAAET,QAAAA,KAAF;AAASO,QAAAA;AAAT,OAAD,CAAP;AACA1C,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACAX,MAAAA,QAAQ,CAAC,gCAAD,CAAR;AACAF,MAAAA,QAAQ,CAAC3B,QAAD,CAAR;AACAiB,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAPH,EAOK4C,KAPL,CAOYC,GAAD,IAAS;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYQ,GAAI,EAA7B;AACAjC,MAAAA,QAAQ,CAAC,0CAAD,CAAR;AACAF,MAAAA,QAAQ,CAAC5B,WAAD,CAAR;AACA,UAAI+D,GAAG,KAAK,GAAZ,EAAiB,OAAOzC,gBAAgB,CAAC,qCAAD,CAAvB;AACjBA,MAAAA,gBAAgB,CAAC,0CAAD,CAAhB;AACD,KAbH,EAaKyD,OAbL,CAaahC,iBAbb;AAcD,GA9MY,CAkNb;;;AACA,WAASsC,OAAT,QAAsC;AAAA,QAArB;AAAET,MAAAA,KAAF;AAASO,MAAAA;AAAT,KAAqB;AACpCrF,IAAAA,OAAO,CAACwF,KAAR,CAAc;AAAEV,MAAAA,KAAF;AAASO,MAAAA;AAAT,KAAd,EACG1B,IADH,CACSC,GAAD,IAAS;AACbjB,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACAW,MAAAA,YAAY,CAACO,OAAb,CAAqB,KAArB,EAA4BD,GAAG,CAAC6B,KAAhC;AACAC,MAAAA,OAAO;AACPpC,MAAAA,YAAY,CAACO,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAApC,EAJa,CAKb;;AACAN,MAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAzC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,aAAOwC,GAAP;AACD,KAVH,EAWGI,KAXH,CAWUC,GAAD,IAAS;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYQ,GAAI,EAA7B;AACAvC,MAAAA,aAAa,CAAC,0CAAD,CAAb;AACA,UAAIuC,GAAG,KAAK,GAAZ,EAAiB,OAAOzC,gBAAgB,CAAC,qCAAD,CAAvB;AACjBQ,MAAAA,QAAQ,CAAC,0CAAD,CAAR;AACAF,MAAAA,QAAQ,CAAC5B,WAAD,CAAR;AACA+C,MAAAA,iBAAiB;AAClB,KAlBH;AAmBD;;AAED,WAASyC,OAAT,GAAmB;AACjB,UAAMrC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACA,UAAMoC,WAAW,GAAG3F,OAAO,CAACkF,WAAR,CAAoB7B,GAApB,CAApB;AACA,UAAMuC,MAAM,GAAG3F,SAAS,CAAC4F,eAAV,EAAf;AACA,UAAMC,cAAc,GAAG9F,OAAO,CAAC+F,SAAR,CAAkB1C,GAAlB,CAAvB;AACA2C,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACN,WAAD,EAAcC,MAAd,EAAsBE,cAAtB,CAAZ,EACGnC,IADH,CACSC,GAAD,IAAS;AACb7C,MAAAA,cAAc,CAAC6C,GAAD,CAAd;AACAtB,MAAAA,aAAa,CAACsB,GAAD,CAAb;AACAxB,MAAAA,eAAe,CAACwB,GAAG,CAAC,CAAD,CAAH,CAAO0B,IAAR,CAAf;AAEAhC,MAAAA,YAAY,CAACO,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAApC;AACAN,MAAAA,YAAY,CAACO,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAA/B;AACAN,MAAAA,YAAY,CAACO,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeH,GAAG,CAAC,CAAD,CAAH,CAAO0B,IAAtB,CAApC;AAED,KAVH,EAUKtB,KAVL,CAUYC,GAAD,IAAS;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYQ,GAAI,EAA7B;AACD,KAZH;AAaD;;AAAA,GA3PY,CA+Pb;;AACA,WAASiC,OAAT,GAAmB;AACjB5C,IAAAA,YAAY,CAAC6C,KAAb;AACAxD,IAAAA,QAAQ,CAAC,GAAD,CAAR,CAFiB,CAGjB;AACA;;AACA5B,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAK,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AAID,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEN,WAApC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACGF,QAAQ,iBAAI,QAAC,MAAD;AAAA,kBACVO,UAAU,gBAAG,QAAC,UAAD;AAAY,UAAA,YAAY,EAAE4B;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAgD,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADhD;AAAA;AAAA;AAAA;AAAA,cADf,eAKG,QAAC,MAAD;AAAA,gCACC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,OAAO,eAEzB,QAAC,cAAD;AACE,YAAA,UAAU,EAAE5B,UADd;AAEE,YAAA,SAAS,EAAE5B,MAFb;AAGE,YAAA,YAAY,EAAEwD,YAHhB;AAIE,YAAA,gBAAgB,EAAEI,gBAJpB;AAKE,YAAA,kBAAkB,EAAEe,kBALtB;AAME,YAAA,YAAY,EAAE/B,YANhB;AAOE,YAAA,UAAU,EAAEE,UAPd;AAQE,YAAA,aAAa,EAAEC,aARjB;AASE,YAAA,WAAW,EAAEC,WATf;AAUE,YAAA,cAAc,EAAEC,cAVlB;AAWE,YAAA,SAAS,EAAEC,SAXb;AAYE,YAAA,YAAY,EAAEC,YAZhB;AAaE,YAAA,SAAS,EAAEG,SAbb;AAcE,YAAA,YAAY,EAAEC;AAdhB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADD,eAoBC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAEnB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBApBD,eAyBC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,OAAO,eAE/B,QAAC,cAAD;AACE,YAAA,SAAS,EAAErD,WADb;AAEE,YAAA,UAAU,EAAE0B,UAFd;AAGE,YAAA,YAAY,EAAE4B,YAHhB;AAIE,YAAA,YAAY,EAAEZ,YAJhB;AAKE,YAAA,eAAe,EAAEC,eALnB;AAME,YAAA,kBAAkB,EAAE8B,kBANtB;AAOE,YAAA,gBAAgB,EAAEf,gBAPpB;AAQE,YAAA,UAAU,EAAEd,UARd;AASE,YAAA,aAAa,EAAEC,aATjB;AAUE,YAAA,WAAW,EAAEC,WAVf;AAWE,YAAA,cAAc,EAAEC,cAXlB;AAYE,YAAA,SAAS,EAAEC,SAZb;AAaE,YAAA,YAAY,EAAEC,YAbhB;AAcE,YAAA,SAAS,EAAEG,SAdb;AAeE,YAAA,YAAY,EAAEC,YAfhB;AAgBE,YAAA,SAAS,EAAED,SAhBb;AAiBE,YAAA,YAAY,EAAEC;AAjBhB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAzBD,eAiDC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,OAAO,eAE1B,QAAC,cAAD;AACE,YAAA,SAAS,EAAEnD,OADb;AAEE,YAAA,UAAU,EAAEwB,UAFd;AAGE,YAAA,OAAO,EAAE+E,OAHX;AAIE,YAAA,YAAY,EAAEtB,gBAJhB;AAKE,YAAA,WAAW,EAAEjD;AALf;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAjDD,eA6DC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AACE,UAAA,OAAO,eAAE,QAAC,cAAD;AACP,YAAA,SAAS,EAAE/B,KADJ;AAEP,YAAA,UAAU,EAAE,CAACuB,UAFN;AAGP,YAAA,OAAO,EAAEoE,OAHF;AAIP,YAAA,UAAU,EAAE9D;AAJL;AAAA;AAAA;AAAA;AAAA;AADX;AAAA;AAAA;AAAA;AAAA,gBA7DD,eAoEC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,OAAO,eAC3B,QAAC,cAAD;AACE,YAAA,SAAS,EAAE5B,QADb;AAEE,YAAA,UAAU,EAAE,CAACsB,UAFf;AAGE,YAAA,UAAU,EAAEiE,UAHd;AAIE,YAAA,aAAa,EAAE7D,aAJjB;AAKE,YAAA,gBAAgB,EAAEC;AALpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApED,eA6EC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eACrB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA7ED;AAAA;AAAA;AAAA;AAAA;AAAA,cALH,eAuFE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEP,WAArB;AACE,QAAA,OAAO,EAAE+B;AADX;AAAA;AAAA;AAAA;AAAA,cAvFF,eA0FE,QAAC,WAAD;AACE,QAAA,KAAK,EAAEnB,KADT;AAEE,QAAA,KAAK,EAAEE,KAFT;AAGE,QAAA,OAAO,EAAEiB,cAHX;AAIE,QAAA,MAAM,EAAEf;AAJV;AAAA;AAAA;AAAA;AAAA,cA1FF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqGD;;GAhXQvB,G;UACQpB,W,EAmCED,W;;;KApCVqB,G;AAkXT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate, useLocation } from \"react-router-dom\";\nimport Movies from '../Movies/Movies.js';\nimport HeaderPopup from '../HeaderPopup/HeaderPopup.js';\nimport SavedMovies from '../SavedMovies/SavedMovies.js';\nimport NotFound from '../NotFound/NotFound.js';\nimport Profile from '../Profile/Profile.js';\nimport Login from '../Login/Login.js';\nimport Register from '../Register/Register.js';\nimport Main from '../Main/Main.js';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext.js';\nimport { mainApi } from '../../utils/MainApi.js';\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport notRegister from \"../../images/negativ-result.svg\";\nimport register from \"../../images/positiv_result.svg\";\nimport InfoTooLtip from '../InfoTooLtip/InfoTooltip.js';\nimport Header from '../Header/Header.js';\nimport Navigation from '../Navigation/Navigation.js';\nimport SigninButton from '../SigninButton/SigninButton.js';\nimport ScreenSize from '../../hooks/ScreenSize.js';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute.js';\n\nfunction App() {\n  const routes = useLocation();\n\n  const isHeader =\n    routes.pathname === '/movies' ||\n    routes.pathname === '/' ||\n    routes.pathname === '/saved-movies' ||\n    routes.pathname === '/profile';\n\n\n  // стейт, отвечающий за данные текущего пользвателя, сюда сохраняются данные о пользователе\n  const [currentUser, setCurrentUser] = React.useState({});\n  // стэйт переменная открыти попапа\n  const [isPopupOpen, setIsPopupOpen] = React.useState(false);\n\n  // стэйт переменные регистрации и авторизации\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [isUserCheck, setIsUserCheck] = React.useState(false);\n\n  const [registerError, setRegisterError] = React.useState(\"\");\n  const [loginError, setLoginError] = React.useState(\"\");\n  const [changeError, setChangeError] = React.useState(\"\");\n\n  // переменные состояния для попапов результата регистрации (не реализовано, оставлено напоследок)\n  const [image, setImage] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  const [isInfoTooLtip, setIsInfoTooLtip] = React.useState(false);\n\n  // переменная состояния для сохраненных фильмов в избранном\n  const [favoriteList, setFavoriteList] = React.useState([]);\n\n  const [moviesList, setMoviesList] = React.useState([]);\n  // переменные состояния для добавления фильмов\n  const [moviesCount, setMoviesCount] = React.useState(0);\n  const [addMovies, setAddMovies] = React.useState(0);\n\n  const navigate = useNavigate();\n\n  // ширина\n  const width = ScreenSize();\n\n  // отображение прейлодера\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  // открытие попапов\n  function onHeaderOpen() {\n    setIsPopupOpen(true)\n  }\n\n  // закрытие попапов\n  function closeAllPopups() {\n    setIsPopupOpen(false);\n    setIsInfoTooLtip(false);\n  }\n  // для результата авторизации и регистрации и изменения пользователя\n  function handleInfoTooLtip() {\n    setIsInfoTooLtip(true);\n  }\n\n  // добавление карточек в зависимости от ширины экрана\n  useEffect(() => {\n    function getCards() {\n      if (width >= 1280) {\n        setMoviesCount(12);\n        setAddMovies(3);\n      } else if (width < 1279 && width >= 767) {\n        setMoviesCount(8);\n        setAddMovies(2);\n      } else if (width <= 766) {\n        setMoviesCount(5);\n        setAddMovies(1);\n      }\n    }\n    getCards()\n  }, [width])\n/*\n  // рендер коллекции карточек\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    setIsLoading(true);\n    // рендер первоначальной коллекции фильмов\n    moviesApi.getInitialCards()\n      .then((movies) => {\n        setMoviesList(movies);\n        sessionStorage.setItem('movies', JSON.stringify(movies));\n        setIsLoading(false);\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n      });\n\n    // рендер сохраненных фильмов\n    mainApi.getMovies(jwt).then((res) => {\n      console.log(res)\n      //  console.log('отработал useEffect рендера списка сохраненных фильмов')\n      setFavoriteList(res[2].data);\n      localStorage.setItem('savedMovies', JSON.stringify(res[2].data));\n      setIsLoading(false);\n    })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      });\n\n  }, [])\n  */\n\n\n\n\n  //console.log(favoriteList)\n\n\n  // сохранение фильма\n  function handleSaveMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log(movie)\n    setFavoriteList([...favoriteList, movie]);\n    mainApi.savedMovies({ jwt, movie })\n      .then((res) => {\n        console.log(res)\n        console.log(favoriteList)\n        setFavoriteList([...favoriteList, res]);\n        localStorage.setItem('savedMovies', JSON.stringify([...favoriteList, res]));\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n  // удаление фильма\n  function handleDeleteMovies(movie) {\n    const jwt = localStorage.getItem(\"jwt\");\n    const id = movie.movieId || movie.id;\n    const movieId =\n      movie._id || favoriteList.find((item) => item.movieId === movie.id)._id;\n    mainApi.deleteMovies({ jwt, movieId }).\n      then((res) => {\n        console.log(res);\n        if (res) {\n          const arr = JSON.parse(localStorage.getItem('savedMovies')).filter((item) => item.movieId !== id);\n          setFavoriteList(arr);\n          localStorage.setItem('savedMovies', JSON.stringify(arr));\n        }\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  }\n\n\n\n  // изменение инорфмации о пользователе\n  function handleUpdateUser({ name, email }) {\n    const jwt = localStorage.getItem(\"jwt\");\n    mainApi.updateUser({ jwt, name, email })\n      .then((user) => {\n        setTitle(\"Данные успешно изменены!\");\n        setImage(register);\n        if (user._id) {\n          setCurrentUser(user);\n        }\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n      }).finally(handleInfoTooLtip)\n  }\n\n\n  // проверка токенов авторизованных пользователей, вернувшихся в приложение\n  useEffect(() => {\n    console.log('useEffect в App отработал')\n    const jwt = localStorage.getItem(\"jwt\");\n    if (localStorage.jwt) {\n      setIsLoggedIn(true);\n      mainApi.getUserInfo(jwt)\n      .then((profile) => {\n        setIsLoggedIn(true);\n        console.log(profile)\n        setCurrentUser(profile);\n        localStorage.setItem('currentUser', JSON.stringify(profile))\n        navigate(routes.pathname);\n      })\n      .catch((err) => {\n        navigate('/signin');\n        console.log(`Внимание! ${err}`);\n      })\n    }\n  }, []);\n\n\n  // регистрация\n  function onRegister({ email, password, name }) {\n    mainApi.register({ email, password, name })\n      .then((data) => {\n        onLogin({ email, password });\n        navigate('/movies');\n        setTitle(\"Вы успешно зарегистрировались!\");\n        setImage(register);\n        setIsLoggedIn(true);\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n        setRegisterError('Что-то пошло не так, попробуйте еще раз!')\n      }).finally(handleInfoTooLtip)\n  }\n\n\n\n  // авторизация\n  function onLogin({ email, password }) {\n    mainApi.login({ email, password })\n      .then((res) => {\n        navigate('/movies');\n        localStorage.setItem(\"jwt\", res.token);\n        setData();\n        localStorage.setItem('currentUser', JSON.stringify(res));\n        // console.log(res.token);\n        localStorage.setItem('isLoggedIn', true)\n        setIsLoggedIn(true);\n        return res;\n      })\n      .catch((err) => {\n        console.log(`Внимание! ${err}`);\n        setLoginError('Что-то пошло не так, попробуйте еще раз!');\n        if (err === 400) return setRegisterError('Некорректно заполнено одно из полей');\n        setTitle(\"Что-то пошло не так! Попробуйте ещё раз.\");\n        setImage(notRegister);\n        handleInfoTooLtip()\n      })\n  }\n\n  function setData() {\n    const jwt = localStorage.getItem(\"jwt\");\n    const profileInfo = mainApi.getUserInfo(jwt);\n    const movies = moviesApi.getInitialCards();\n    const favoriteMovies = mainApi.getMovies(jwt);\n    Promise.all([profileInfo, movies, favoriteMovies])\n      .then((res) => {\n        setCurrentUser(res);\n        setMoviesList(res);\n        setFavoriteList(res[2].data);\n\n        localStorage.setItem('currentUser', JSON.stringify(res));\n        localStorage.setItem('movies', JSON.stringify(res));\n        localStorage.setItem('savedMovies', JSON.stringify(res[2].data));\n\n      }).catch((err) => {\n        console.log(`Внимание! ${err}`);\n      })\n  };\n\n\n\n  // удаление токена при выходе\n  function signOut() {\n    localStorage.clear();\n    navigate(\"/\");\n    //setFavoriteList([]);\n    //  setMoviesList([]);\n    setCurrentUser([]);\n    setIsLoggedIn(false);\n  }\n\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        {isHeader && <Header>\n          {isLoggedIn ? <Navigation onHeaderOpen={onHeaderOpen} /> : <SigninButton />}\n        </Header>}\n\n        {<Routes>\n          <Route path='/movies' element={\n\n              <ProtectedRoute\n                isLoggedIn={isLoggedIn}\n                component={Movies}\n                onHeaderOpen={onHeaderOpen}\n                handleSaveMovies={handleSaveMovies}\n                handleDeleteMovies={handleDeleteMovies}\n                favoriteList={favoriteList}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              ></ProtectedRoute>\n          } ></Route>\n          <Route path=\"/\" element={\n        \n              <Main />\n \n          } />\n          <Route path=\"/saved-movies\" element={\n           \n              <ProtectedRoute\n                component={SavedMovies}\n                isLoggedIn={isLoggedIn}\n                onHeaderOpen={onHeaderOpen}\n                favoriteList={favoriteList}\n                setFavoriteList={setFavoriteList}\n                handleDeleteMovies={handleDeleteMovies}\n                handleSaveMovies={handleSaveMovies}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                moviesCount={moviesCount}\n                setMoviesCount={setMoviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              >\n              </ProtectedRoute>\n           \n          } />\n          <Route path=\"/profile\" element={\n          \n              <ProtectedRoute\n                component={Profile}\n                isLoggedIn={isLoggedIn}\n                signOut={signOut}\n                onUpdateUser={handleUpdateUser}\n                changeError={changeError}\n              >\n              </ProtectedRoute>\n      \n          } />\n          <Route path=\"/signin\"\n            element={<ProtectedRoute\n              component={Login}\n              isLoggedIn={!isLoggedIn}\n              onLogin={onLogin}\n              loginError={loginError}\n            ></ProtectedRoute>} />\n          <Route path=\"/signup\" element={\n            <ProtectedRoute\n              component={Register}\n              isLoggedIn={!isLoggedIn}\n              onRegister={onRegister}\n              registerError={registerError}\n              setRegisterError={setRegisterError}>\n            </ProtectedRoute>\n          } />\n          <Route path=\"*\" element={\n            <NotFound />\n          } />\n        </Routes>}\n\n        <HeaderPopup isOpen={isPopupOpen}\n          onClose={closeAllPopups}\n        />\n        <InfoTooLtip\n          image={image}\n          title={title}\n          onClose={closeAllPopups}\n          isOpen={isInfoTooLtip}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}