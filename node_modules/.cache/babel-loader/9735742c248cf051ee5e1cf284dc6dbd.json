{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/SavedMovies/SavedMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Footer from '../Footer/Footer';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SavedMovies(_ref) {\n  _s();\n\n  let {\n    handleDeleteMovies,\n    moviesList,\n    setMoviesList,\n    moviesCount,\n    setMoviesCount,\n    addMovies,\n    setAddMovies,\n    isLoading,\n    setIsLoading,\n    favoriteList,\n    setFavoriteList\n  } = _ref;\n  const routes = useLocation();\n  const valueData = localStorage.getItem('value');\n  const [value, setValue] = React.useState(valueData && routes.pathname === '/movies' ? valueData : ''); // стейт-переменная состояния тумблера\n\n  const [checked, setChecked] = useState(false);\n  const [shortList, setShortList] = useState([]);\n  const [message, setMessage] = React.useState('');\n  const [favoriteListForRender, setFavoriteListForRender] = useState([]); // фильтрация через строку поиска\n\n  useEffect(() => {\n    const filterMovies = JSON.parse(localStorage.getItem('savedMovies')).filter(movie => movie.nameRU.toLowerCase().indexOf(value.toLowerCase()) > -1);\n\n    if (filterMovies.length) {\n      setFavoriteList(filterMovies);\n      let favoriteListForRender = favoriteListForRender.concat(favoriteList);\n      localStorage.setItem('foundSaveMovies', JSON.stringify(filterMovies));\n    } else {\n      setFavoriteList([]);\n      setMessage('Ничего не найдено');\n    }\n  }, [value]);\n  console.log(checked); //console.log(checkBoxStatus)\n\n  function handleSubmitSearchForm(value) {\n    setValue(value);\n  } // фильтрация массива через установку тумблера (продолжительность фильма)\n\n\n  useEffect(() => {\n    if (checked && favoriteList.length) {\n      const newShortList = JSON.parse(localStorage.getItem('foundSaveMovies')).filter(movie => movie.duration <= 40);\n      newShortList.length ? setShortList(newShortList) : setFavoriteList([]);\n      localStorage.setItem('foundSaveMovies', JSON.stringify(newShortList));\n    } else {\n      setShortList([]);\n      setMessage('Ничего не найдено');\n    }\n  }, [checked]);\n\n  function handleCheckboxChange(isCheckboxOn) {\n    setChecked(isCheckboxOn);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies movies_saved\",\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      setMoviesCount: setMoviesCount,\n      value: value,\n      setValue: setValue,\n      handleSubmitSearchForm: handleSubmitSearchForm,\n      handleCheckboxChange: handleCheckboxChange,\n      checked: checked,\n      setChecked: setChecked,\n      isLoading: isLoading,\n      setIsLoading: setIsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MoviesCardList, {\n      favoriteList: checked ? shortList : favoriteList,\n      handleDeleteMovies: handleDeleteMovies,\n      moviesList: moviesList,\n      setMoviesList: setMoviesList,\n      setMoviesCount: setMoviesCount,\n      moviesCount: moviesCount,\n      addMovies: addMovies,\n      setAddMovies: setAddMovies,\n      message: message,\n      setMessage: setMessage,\n      isLoading: isLoading,\n      setIsLoading: setIsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SavedMovies, \"L0dERsm5fVhWRT9/j5P6/hCjv8Q=\", false, function () {\n  return [useLocation];\n});\n\n_c = SavedMovies;\nexport default SavedMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedMovies\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/SavedMovies/SavedMovies.js"],"names":["React","useState","useEffect","MoviesCardList","SearchForm","Footer","useLocation","SavedMovies","handleDeleteMovies","moviesList","setMoviesList","moviesCount","setMoviesCount","addMovies","setAddMovies","isLoading","setIsLoading","favoriteList","setFavoriteList","routes","valueData","localStorage","getItem","value","setValue","pathname","checked","setChecked","shortList","setShortList","message","setMessage","favoriteListForRender","setFavoriteListForRender","filterMovies","JSON","parse","filter","movie","nameRU","toLowerCase","indexOf","length","concat","setItem","stringify","console","log","handleSubmitSearchForm","newShortList","duration","handleCheckboxChange","isCheckboxOn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Footer from '../Footer/Footer';\nimport { useLocation } from 'react-router';\n\n\n\nfunction SavedMovies({\n    handleDeleteMovies,\n    moviesList,\n    setMoviesList,\n    moviesCount,\n    setMoviesCount,\n    addMovies,\n    setAddMovies,\n    isLoading,\n    setIsLoading,\n    favoriteList,\n    setFavoriteList }) {\n\n\n    const routes = useLocation()\n    const valueData = localStorage.getItem('value')\n    const [value, setValue] = React.useState(valueData && routes.pathname === '/movies' ? valueData : '')\n\n    // стейт-переменная состояния тумблера\n    const [checked, setChecked] = useState(false);\n    const [shortList, setShortList] = useState([])\n    const [message, setMessage] = React.useState('')\n\n    const [favoriteListForRender, setFavoriteListForRender] = useState([])\n\n\n    // фильтрация через строку поиска\n    useEffect(() => {\n        const filterMovies = JSON.parse(localStorage.getItem('savedMovies')).filter((movie) =>\n            movie.nameRU.toLowerCase().indexOf(value.toLowerCase()) > -1)\n        if (filterMovies.length) {\n            setFavoriteList(filterMovies);\n            let favoriteListForRender = favoriteListForRender.concat(favoriteList);\n            localStorage.setItem('foundSaveMovies', JSON.stringify(filterMovies));\n        } else {\n            setFavoriteList([])\n            setMessage('Ничего не найдено');\n        }\n    }, [value])\n\n    console.log(checked)\n    //console.log(checkBoxStatus)\n\n    function handleSubmitSearchForm(value) {\n        setValue(value);\n    }\n\n    // фильтрация массива через установку тумблера (продолжительность фильма)\n    useEffect(() => {\n        if (checked && favoriteList.length) {\n            const newShortList = JSON.parse(localStorage.getItem('foundSaveMovies')).filter(movie => movie.duration <= 40)\n            newShortList.length ?\n                setShortList(newShortList) : setFavoriteList([])\n                localStorage.setItem('foundSaveMovies', JSON.stringify(newShortList));\n        } else {\n            setShortList([])\n            setMessage('Ничего не найдено');\n        }\n    }, [checked])\n\n\n    function handleCheckboxChange(isCheckboxOn) {\n        setChecked(isCheckboxOn)\n    }\n\n\n    return (\n        <section className=\"movies movies_saved\">\n            <SearchForm setMoviesCount={setMoviesCount}\n                value={value}\n                setValue={setValue}\n                handleSubmitSearchForm={handleSubmitSearchForm}\n                handleCheckboxChange={handleCheckboxChange}\n                checked={checked}\n                setChecked={setChecked}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n            >\n            </SearchForm>\n            <MoviesCardList\n                favoriteList={checked ? shortList : favoriteList}\n                handleDeleteMovies={handleDeleteMovies}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                setMoviesCount={setMoviesCount}\n                moviesCount={moviesCount}\n                addMovies={addMovies}\n                setAddMovies={setAddMovies}\n                message={message}\n                setMessage={setMessage}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n            />\n            <Footer></Footer>\n        </section>\n    );\n}\n\nexport default SavedMovies;\n"]},"metadata":{},"sourceType":"module"}