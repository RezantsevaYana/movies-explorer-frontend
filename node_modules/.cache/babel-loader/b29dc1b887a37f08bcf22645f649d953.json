{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from 'react-router';\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoviesCardList(props) {\n  _s();\n\n  const routes = useLocation();\n\n  function handleClick() {\n    props.setMoviesCount(props.moviesCount + 3);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies-list\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MoviesCardList, \"w1a4E/2uxAkV/9UejXP7mbcgxbI=\", false, function () {\n  return [useLocation];\n});\n\n_c = MoviesCardList;\nexport default MoviesCardList; // добавить вариант с выводом на экран \"ничего не найдено\"\n// убрать конпку \"еще\" в случае, если нет поиска\n// добавить вариант поиска по английскому наименованию\n// сделать так, чтобы результат поиска при последующих поисках не осуществлялся\n// рендер карточек фильмов в зависимости от размеров экрана\n// при нажатии на карточку происходит переадресация на трейлер фильма\n\n/*\n{ routes.pathname === \"/movies\" && props.moviesList && props.moviesList.length === 0 ?\n            (<Preloader/>) :\n            (<section className=\"movies-list\">\n            {props.filterMovies.map((item, index) => {\n              if (index + 1 <= props.moviesCount) {\n                return <MoviesCard movie={item} key={index} handleSaveMovies={props.handleSaveMovies} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n        }\n*/\n\n/*\n<>\n        { routes.pathname === \"/movies\" && props.moviesList && props.moviesList.length === 0 ?\n            (<Preloader/>) :\n            (<section className=\"movies-list\">\n            {props.filterMovies.map((item, index) => {\n              if (index + 1 <= props.moviesCount) {\n                return <MoviesCard movie={item} key={index} handleSaveMovies={props.handleSaveMovies} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n        }\n        { routes.pathname === \"/saved-movies\" && props.moviesList && props.moviesList.length === 0 ?\n            (<Preloader/>) :\n            (<section className=\"movies-list\">\n            {props.filterMovies.map((item, index) => {\n              if (index + 1 <= props.moviesCount) {\n                return <MoviesCard movie={item} key={index} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n        }\n        { 0 < props.moviesCount && props.moviesCount < 30 && props.moviesCount < props.moviesList.length  && routes.pathname === \"/movies\" &&   (\n            <section className=\"another-button__container\">\n                <button className=\"another-button\" onClick={handleClick}>Ещё</button>\n            </section>\n        )}\n  </>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"sources":["/Users/rezanceva96/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"names":["useLocation","React","useEffect","useState","moviesApi","MoviesCard","Preloader","MoviesCardList","props","routes","handleClick","setMoviesCount","moviesCount"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,MAAM,GAAIT,WAAW,EAA3B;;AAGA,WAASU,WAAT,GAAuB;AACnBF,IAAAA,KAAK,CAACG,cAAN,CAAqBH,KAAK,CAACI,WAAN,GAAkB,CAAvC;AACH;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GAdQL,c;UACWP,W;;;KADXO,c;AAgBT,eAAeA,cAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useLocation } from 'react-router';\nimport React, { useEffect, useState } from \"react\";\nimport moviesApi from \"../../utils/MoviesApi.js\";\nimport MoviesCard from \"../MoviesCard/MoviesCard.js\";\nimport Preloader from \"../Preloader/Preloader.js\";\n\n\nfunction MoviesCardList(props) {\n    const routes  = useLocation();\n    \n \n    function handleClick() {\n        props.setMoviesCount(props.moviesCount+3);\n    }\n\n    return (\n      <section className=\"movies-list\">\n\n      </section>\n\n    );\n}\n\nexport default MoviesCardList;\n\n\n// добавить вариант с выводом на экран \"ничего не найдено\"\n// убрать конпку \"еще\" в случае, если нет поиска\n// добавить вариант поиска по английскому наименованию\n// сделать так, чтобы результат поиска при последующих поисках не осуществлялся\n// рендер карточек фильмов в зависимости от размеров экрана\n// при нажатии на карточку происходит переадресация на трейлер фильма\n\n\n/*\n{ routes.pathname === \"/movies\" && props.moviesList && props.moviesList.length === 0 ?\n            (<Preloader/>) :\n            (<section className=\"movies-list\">\n            {props.filterMovies.map((item, index) => {\n              if (index + 1 <= props.moviesCount) {\n                return <MoviesCard movie={item} key={index} handleSaveMovies={props.handleSaveMovies} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n        }\n*/\n\n\n/*\n<>\n        { routes.pathname === \"/movies\" && props.moviesList && props.moviesList.length === 0 ?\n            (<Preloader/>) :\n            (<section className=\"movies-list\">\n            {props.filterMovies.map((item, index) => {\n              if (index + 1 <= props.moviesCount) {\n                return <MoviesCard movie={item} key={index} handleSaveMovies={props.handleSaveMovies} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n        }\n        { routes.pathname === \"/saved-movies\" && props.moviesList && props.moviesList.length === 0 ?\n            (<Preloader/>) :\n            (<section className=\"movies-list\">\n            {props.filterMovies.map((item, index) => {\n              if (index + 1 <= props.moviesCount) {\n                return <MoviesCard movie={item} key={index} />;\n              } else {\n                return '';\n              }\n            })}\n            </section>)\n        }\n        { 0 < props.moviesCount && props.moviesCount < 30 && props.moviesCount < props.moviesList.length  && routes.pathname === \"/movies\" &&   (\n            <section className=\"another-button__container\">\n                <button className=\"another-button\" onClick={handleClick}>Ещё</button>\n            </section>\n        )}\n  </>\n*/\n\n\n\n   \n"]},"metadata":{},"sourceType":"module"}